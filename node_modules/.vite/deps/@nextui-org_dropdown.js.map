{
  "version": 3,
  "sources": ["../../@nextui-org/dropdown/dist/chunk-WRRPXIUB.mjs", "../../@nextui-org/popover/dist/chunk-Z3P7GO4G.mjs", "../../@nextui-org/use-aria-overlay/dist/index.mjs", "../../@nextui-org/popover/dist/chunk-HWCD2GH5.mjs", "../../@nextui-org/popover/dist/chunk-6NWALNDX.mjs", "../../@react-aria/dialog/dist/packages/@react-aria/dialog/src/useDialog.ts", "../../@nextui-org/popover/dist/chunk-SQ3I4X62.mjs", "../../@nextui-org/popover/dist/chunk-3KHBFE7C.mjs", "../../@nextui-org/popover/dist/chunk-HGSZQ3PO.mjs", "../../@nextui-org/popover/dist/chunk-54SXDOOT.mjs", "../../@nextui-org/menu/dist/chunk-EEKZGUSR.mjs", "../../@nextui-org/menu/dist/chunk-7C7K3AST.mjs", "../../@nextui-org/menu/dist/chunk-BQCSFB47.mjs", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/utils.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useTypeSelect.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableCollection.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableItem.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/ListKeyboardDelegate.ts", "../../@react-aria/selection/dist/packages/@react-aria/selection/src/useSelectableList.ts", "../../@nextui-org/use-aria-menu/dist/chunk-PH3KUROQ.mjs", "../../@nextui-org/use-aria-menu/dist/chunk-XMP5YDUN.mjs", "../../@nextui-org/use-is-mobile/node_modules/@react-aria/ssr/dist/packages/@react-aria/ssr/src/SSRProvider.tsx", "../../@nextui-org/use-is-mobile/dist/index.mjs", "../../@nextui-org/menu/dist/chunk-CQ43W3AP.mjs", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ar-AE.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/bg-BG.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/cs-CZ.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/da-DK.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/de-DE.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/el-GR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/en-US.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/es-ES.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/et-EE.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/fi-FI.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/fr-FR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/he-IL.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/hr-HR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/hu-HU.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/it-IT.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ja-JP.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ko-KR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/lt-LT.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/lv-LV.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/nb-NO.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/nl-NL.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/pl-PL.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/pt-BR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/pt-PT.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ro-RO.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/ru-RU.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/sk-SK.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/sl-SI.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/sr-SP.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/sv-SE.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/tr-TR.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/uk-UA.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/zh-CN.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/intl/zh-TW.json", "../../@react-aria/menu/dist/packages/@react-aria/menu/src/*.js", "../../@react-aria/menu/dist/packages/@react-aria/menu/src/useMenuTrigger.ts", "../../@react-aria/menu/dist/packages/@react-aria/menu/src/useMenuSection.ts", "../../@react-aria/menu/dist/packages/@react-aria/menu/src/useSafelyMouseToSubmenu.ts", "../../@nextui-org/menu/dist/chunk-SMP2PQ35.mjs", "../../@nextui-org/divider/dist/chunk-LVTFMK47.mjs", "../../@nextui-org/divider/dist/chunk-HGQPAK7A.mjs", "../../@nextui-org/divider/dist/chunk-44JHHBS2.mjs", "../../@react-stately/tree/dist/packages/@react-stately/tree/src/TreeCollection.ts", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/Selection.ts", "../../@react-stately/selection/node_modules/@react-stately/utils/dist/packages/@react-stately/utils/src/useControlledState.ts", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/useMultipleSelectionState.ts", "../../@react-stately/selection/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/Item.ts", "../../@react-stately/selection/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/Section.ts", "../../@react-stately/selection/node_modules/@react-stately/collections/dist/packages/@react-stately/collections/src/getChildNodes.ts", "../../@react-stately/selection/dist/packages/@react-stately/selection/src/SelectionManager.ts", "../../@react-stately/tree/dist/packages/@react-stately/tree/src/useTreeState.ts", "../../@nextui-org/menu/dist/chunk-BA3PRXRG.mjs", "../../@nextui-org/menu/dist/chunk-V6B7KTCO.mjs", "../../@nextui-org/menu/dist/chunk-LRDIO3JU.mjs", "../../@nextui-org/dropdown/dist/chunk-SXHEBZUY.mjs", "../../@nextui-org/dropdown/dist/chunk-63RZRIL7.mjs", "../../@react-stately/menu/dist/packages/@react-stately/menu/src/useMenuTriggerState.ts", "../../@nextui-org/dropdown/dist/chunk-IBACTBRQ.mjs", "../../@nextui-org/dropdown/dist/chunk-HKWRQVCY.mjs"],
  "sourcesContent": ["\"use client\";\n\n// src/dropdown-context.ts\nimport { createContext } from \"@nextui-org/react-utils\";\nvar [DropdownProvider, useDropdownContext] = createContext({\n  name: \"DropdownContext\",\n  errorMessage: \"useDropdownContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Dropdown />`\"\n});\n\nexport {\n  DropdownProvider,\n  useDropdownContext\n};\n", "\"use client\";\n\n// src/use-aria-popover.ts\nimport { useEffect } from \"react\";\nimport {\n  useOverlayPosition\n} from \"@react-aria/overlays\";\nimport { ariaHideOutside, toReactAriaPlacement } from \"@nextui-org/aria-utils\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useSafeLayoutEffect } from \"@nextui-org/use-safe-layout-effect\";\nimport { useAriaOverlay } from \"@nextui-org/use-aria-overlay\";\nfunction useReactAriaPopover(props, state) {\n  const {\n    triggerRef,\n    popoverRef,\n    showArrow,\n    offset = 7,\n    crossOffset = 0,\n    scrollRef,\n    shouldFlip,\n    boundaryElement,\n    isDismissable = true,\n    shouldCloseOnBlur = true,\n    placement: placementProp = \"top\",\n    containerPadding,\n    shouldCloseOnInteractOutside,\n    isNonModal: isNonModalProp,\n    isKeyboardDismissDisabled,\n    updatePositionDeps = [],\n    ...otherProps\n  } = props;\n  const isNonModal = isNonModalProp != null ? isNonModalProp : true;\n  const { overlayProps, underlayProps } = useAriaOverlay(\n    {\n      isOpen: state.isOpen,\n      onClose: state.close,\n      shouldCloseOnBlur,\n      isDismissable,\n      isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside: shouldCloseOnInteractOutside || ((el) => {\n        var _a;\n        return !((_a = triggerRef.current) == null ? void 0 : _a.contains(el));\n      }),\n      disableOutsideEvents: !isNonModal\n    },\n    popoverRef\n  );\n  const {\n    overlayProps: positionProps,\n    arrowProps,\n    placement,\n    updatePosition\n  } = useOverlayPosition({\n    ...otherProps,\n    shouldFlip,\n    crossOffset,\n    targetRef: triggerRef,\n    overlayRef: popoverRef,\n    isOpen: state.isOpen,\n    scrollRef,\n    boundaryElement,\n    containerPadding,\n    placement: toReactAriaPlacement(placementProp),\n    offset: showArrow ? offset + 3 : offset,\n    onClose: isNonModal ? state.close : () => {\n    }\n  });\n  useSafeLayoutEffect(() => {\n    if (!updatePositionDeps.length)\n      return;\n    updatePosition();\n  }, updatePositionDeps);\n  useEffect(() => {\n    if (state.isOpen && !isNonModal && popoverRef.current) {\n      return ariaHideOutside([popoverRef.current]);\n    }\n  }, [isNonModal, state.isOpen, popoverRef]);\n  return {\n    popoverProps: mergeProps(overlayProps, positionProps),\n    arrowProps,\n    underlayProps,\n    placement\n  };\n}\n\nexport {\n  useReactAriaPopover\n};\n", "// src/index.ts\nimport { isElementInChildOfActiveScope } from \"@react-aria/focus\";\nimport { useFocusWithin, useInteractOutside } from \"@react-aria/interactions\";\nimport { useEffect } from \"react\";\nvar visibleOverlays = [];\nfunction useAriaOverlay(props, ref) {\n  const {\n    disableOutsideEvents = true,\n    isDismissable = false,\n    isKeyboardDismissDisabled = false,\n    isOpen,\n    onClose,\n    shouldCloseOnBlur,\n    shouldCloseOnInteractOutside\n  } = props;\n  useEffect(() => {\n    if (isOpen) {\n      visibleOverlays.push(ref);\n    }\n    return () => {\n      const index = visibleOverlays.indexOf(ref);\n      if (index >= 0) {\n        visibleOverlays.splice(index, 1);\n      }\n    };\n  }, [isOpen, ref]);\n  const onHide = () => {\n    if (visibleOverlays[visibleOverlays.length - 1] === ref && onClose) {\n      onClose();\n    }\n  };\n  const onInteractOutsideStart = (e) => {\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n      if (visibleOverlays[visibleOverlays.length - 1] === ref) {\n        if (disableOutsideEvents) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n      if (e.pointerType !== \"touch\") {\n        onHide();\n      }\n    }\n  };\n  const onInteractOutside = (e) => {\n    if (e.pointerType !== \"touch\") {\n      return;\n    }\n    if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.target)) {\n      if (visibleOverlays[visibleOverlays.length - 1] === ref) {\n        if (disableOutsideEvents) {\n          e.stopPropagation();\n          e.preventDefault();\n        }\n      }\n      onHide();\n    }\n  };\n  const onKeyDown = (e) => {\n    if (e.key === \"Escape\" && !isKeyboardDismissDisabled && !e.nativeEvent.isComposing) {\n      e.stopPropagation();\n      e.preventDefault();\n      onHide();\n    }\n  };\n  useInteractOutside({\n    isDisabled: !(isDismissable && isOpen),\n    onInteractOutside,\n    onInteractOutsideStart,\n    ref\n  });\n  const { focusWithinProps } = useFocusWithin({\n    isDisabled: !shouldCloseOnBlur,\n    onBlurWithin: (e) => {\n      if (!e.relatedTarget || isElementInChildOfActiveScope(e.relatedTarget)) {\n        return;\n      }\n      if (!shouldCloseOnInteractOutside || shouldCloseOnInteractOutside(e.relatedTarget)) {\n        onHide();\n      }\n    }\n  });\n  const onPointerDownUnderlay = (e) => {\n    if (e.target === e.currentTarget) {\n      e.preventDefault();\n    }\n  };\n  return {\n    overlayProps: {\n      onKeyDown,\n      ...focusWithinProps\n    },\n    underlayProps: {\n      onPointerDown: onPointerDownUnderlay\n    }\n  };\n}\nexport {\n  useAriaOverlay\n};\n", "\"use client\";\nimport {\n  useReactAriaPopover\n} from \"./chunk-Z3P7GO4G.mjs\";\n\n// src/use-popover.ts\nimport { useDOMRef } from \"@nextui-org/react-utils\";\nimport { useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { useOverlayTrigger, usePreventScroll } from \"@react-aria/overlays\";\nimport {\n  mapPropsVariants,\n  useProviderContext\n} from \"@nextui-org/system\";\nimport { getArrowPlacement, getShouldUseAxisPlacement } from \"@nextui-org/aria-utils\";\nimport { popover } from \"@nextui-org/theme\";\nimport { mergeProps, mergeRefs } from \"@react-aria/utils\";\nimport { clsx, dataAttr, objectToDeps } from \"@nextui-org/shared-utils\";\nimport { useMemo, useCallback, useRef } from \"react\";\nfunction usePopover(originalProps) {\n  var _a, _b, _c;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, popover.variantKeys);\n  const {\n    as,\n    ref,\n    children,\n    state: stateProp,\n    triggerRef: triggerRefProp,\n    scrollRef,\n    defaultOpen,\n    onOpenChange,\n    isOpen: isOpenProp,\n    isNonModal = true,\n    shouldFlip = true,\n    containerPadding = 12,\n    shouldBlockScroll = false,\n    isDismissable = true,\n    shouldCloseOnBlur,\n    portalContainer,\n    updatePositionDeps,\n    dialogProps: dialogPropsProp,\n    placement: placementProp = \"top\",\n    triggerType = \"dialog\",\n    showArrow = false,\n    offset = 7,\n    crossOffset = 0,\n    boundaryElement,\n    isKeyboardDismissDisabled,\n    shouldCloseOnInteractOutside,\n    motionProps,\n    className,\n    classNames,\n    onClose,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const domRef = useDOMRef(ref);\n  const domTriggerRef = useRef(null);\n  const wasTriggerPressedRef = useRef(false);\n  const triggerRef = triggerRefProp || domTriggerRef;\n  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const innerState = useOverlayTriggerState({\n    isOpen: isOpenProp,\n    defaultOpen,\n    onOpenChange: (isOpen) => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen);\n      if (!isOpen) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const state = stateProp || innerState;\n  const {\n    popoverProps,\n    underlayProps,\n    placement: ariaPlacement\n  } = useReactAriaPopover(\n    {\n      triggerRef,\n      isNonModal,\n      popoverRef: domRef,\n      placement: placementProp,\n      offset,\n      scrollRef,\n      isDismissable,\n      shouldCloseOnBlur,\n      boundaryElement,\n      crossOffset,\n      shouldFlip,\n      containerPadding,\n      updatePositionDeps,\n      isKeyboardDismissDisabled,\n      shouldCloseOnInteractOutside\n    },\n    state\n  );\n  const { triggerProps } = useOverlayTrigger({ type: triggerType }, state, triggerRef);\n  const { isFocusVisible, isFocused, focusProps } = useFocusRing();\n  const slots = useMemo(\n    () => popover({\n      ...variantProps\n    }),\n    [objectToDeps(variantProps)]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getPopoverProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(popoverProps, otherProps, props2),\n    style: mergeProps(popoverProps.style, otherProps.style, props2.style)\n  });\n  const getDialogProps = (props2 = {}) => ({\n    \"data-slot\": \"base\",\n    \"data-open\": dataAttr(state.isOpen),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-arrow\": dataAttr(showArrow),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    \"data-placement\": getArrowPlacement(ariaPlacement, placementProp),\n    ...mergeProps(focusProps, dialogPropsProp, props2),\n    className: slots.base({ class: clsx(baseStyles) }),\n    style: {\n      outline: \"none\"\n    }\n  });\n  const getContentProps = useCallback(\n    (props2 = {}) => ({\n      \"data-slot\": \"content\",\n      \"data-open\": dataAttr(state.isOpen),\n      \"data-arrow\": dataAttr(showArrow),\n      \"data-placement\": getArrowPlacement(ariaPlacement, placementProp),\n      className: slots.content({ class: clsx(classNames == null ? void 0 : classNames.content, props2.className) })\n    }),\n    [slots, state.isOpen, showArrow, ariaPlacement, placementProp, classNames]\n  );\n  const placement = useMemo(\n    () => getShouldUseAxisPlacement(ariaPlacement, placementProp) ? ariaPlacement || placementProp : placementProp,\n    [ariaPlacement, placementProp]\n  );\n  const onPress = useCallback(\n    (e) => {\n      var _a2;\n      let pressTimer;\n      if (e.pointerType === \"touch\" && ((originalProps == null ? void 0 : originalProps.backdrop) === \"blur\" || (originalProps == null ? void 0 : originalProps.backdrop) === \"opaque\")) {\n        pressTimer = setTimeout(() => {\n          wasTriggerPressedRef.current = true;\n        }, 100);\n      } else {\n        wasTriggerPressedRef.current = true;\n      }\n      (_a2 = triggerProps.onPress) == null ? void 0 : _a2.call(triggerProps, e);\n      return () => {\n        clearTimeout(pressTimer);\n      };\n    },\n    [triggerProps == null ? void 0 : triggerProps.onPress]\n  );\n  const getTriggerProps = useCallback(\n    (props2 = {}, _ref = null) => {\n      const { isDisabled, ...otherProps2 } = props2;\n      return {\n        \"data-slot\": \"trigger\",\n        ...mergeProps({ \"aria-haspopup\": \"dialog\" }, triggerProps, otherProps2),\n        onPress,\n        isDisabled,\n        className: slots.trigger({\n          class: clsx(classNames == null ? void 0 : classNames.trigger, props2.className),\n          isTriggerDisabled: isDisabled\n        }),\n        ref: mergeRefs(_ref, triggerRef)\n      };\n    },\n    [state, triggerProps, onPress, triggerRef]\n  );\n  const getBackdropProps = useCallback(\n    (props2 = {}) => ({\n      \"data-slot\": \"backdrop\",\n      className: slots.backdrop({ class: classNames == null ? void 0 : classNames.backdrop }),\n      onClick: (e) => {\n        if (!wasTriggerPressedRef.current) {\n          e.preventDefault();\n          return;\n        }\n        state.close();\n        wasTriggerPressedRef.current = false;\n      },\n      ...underlayProps,\n      ...props2\n    }),\n    [slots, state.isOpen, classNames, underlayProps]\n  );\n  usePreventScroll({\n    isDisabled: !(shouldBlockScroll && state.isOpen)\n  });\n  return {\n    state,\n    Component,\n    children,\n    classNames,\n    showArrow,\n    triggerRef,\n    placement,\n    isNonModal,\n    popoverRef: domRef,\n    portalContainer,\n    isOpen: state.isOpen,\n    onClose: state.close,\n    disableAnimation,\n    backdrop: (_c = originalProps.backdrop) != null ? _c : \"transparent\",\n    motionProps,\n    getBackdropProps,\n    getPopoverProps,\n    getTriggerProps,\n    getDialogProps,\n    getContentProps\n  };\n}\n\nexport {\n  usePopover\n};\n", "\"use client\";\nimport {\n  usePopover\n} from \"./chunk-HWCD2GH5.mjs\";\n\n// src/free-solo-popover.tsx\nimport * as React from \"react\";\nimport { DismissButton, Overlay } from \"@react-aria/overlays\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { domAnimation, LazyMotion, m } from \"framer-motion\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { getTransformOrigins } from \"@nextui-org/aria-utils\";\nimport { TRANSITION_VARIANTS } from \"@nextui-org/framer-utils\";\nimport { useDialog } from \"@react-aria/dialog\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FreeSoloPopoverWrapper = forwardRef(\n  ({\n    children,\n    motionProps,\n    placement,\n    disableAnimation,\n    style: styleProp = {},\n    transformOrigin = {},\n    ...otherProps\n  }, ref) => {\n    let style = styleProp;\n    if (transformOrigin.originX !== void 0 || transformOrigin.originY !== void 0) {\n      style = {\n        ...style,\n        transformOrigin\n      };\n    } else {\n      style = {\n        ...style,\n        ...getTransformOrigins(placement === \"center\" ? \"top\" : placement)\n      };\n    }\n    return disableAnimation ? /* @__PURE__ */ jsx(\"div\", { ...otherProps, ref, children }) : /* @__PURE__ */ jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsx(\n      m.div,\n      {\n        ref,\n        animate: \"enter\",\n        exit: \"exit\",\n        initial: \"initial\",\n        style,\n        variants: TRANSITION_VARIANTS.scaleSpringOpacity,\n        ...mergeProps(otherProps, motionProps),\n        children\n      }\n    ) });\n  }\n);\nFreeSoloPopoverWrapper.displayName = \"NextUI.FreeSoloPopoverWrapper\";\nvar FreeSoloPopover = forwardRef(\n  ({ children, transformOrigin, disableDialogFocus = false, ...props }, ref) => {\n    const {\n      Component,\n      state,\n      placement,\n      backdrop,\n      portalContainer,\n      disableAnimation,\n      motionProps,\n      isNonModal,\n      getPopoverProps,\n      getBackdropProps,\n      getDialogProps,\n      getContentProps\n    } = usePopover({\n      ...props,\n      ref\n    });\n    const dialogRef = React.useRef(null);\n    const { dialogProps: ariaDialogProps, titleProps } = useDialog({}, dialogRef);\n    const dialogProps = getDialogProps({\n      ...!disableDialogFocus && { ref: dialogRef },\n      ...ariaDialogProps\n    });\n    const backdropContent = React.useMemo(() => {\n      if (backdrop === \"transparent\") {\n        return null;\n      }\n      if (disableAnimation) {\n        return /* @__PURE__ */ jsx(\"div\", { ...getBackdropProps() });\n      }\n      return /* @__PURE__ */ jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsx(\n        m.div,\n        {\n          animate: \"enter\",\n          exit: \"exit\",\n          initial: \"exit\",\n          variants: TRANSITION_VARIANTS.fade,\n          ...getBackdropProps()\n        }\n      ) });\n    }, [backdrop, disableAnimation, getBackdropProps]);\n    return /* @__PURE__ */ jsxs(Overlay, { portalContainer, children: [\n      !isNonModal && backdropContent,\n      /* @__PURE__ */ jsx(Component, { ...getPopoverProps(), children: /* @__PURE__ */ jsxs(\n        FreeSoloPopoverWrapper,\n        {\n          disableAnimation,\n          motionProps,\n          placement,\n          tabIndex: -1,\n          transformOrigin,\n          ...dialogProps,\n          children: [\n            !isNonModal && /* @__PURE__ */ jsx(DismissButton, { onDismiss: state.close }),\n            /* @__PURE__ */ jsx(\"div\", { ...getContentProps(), children: typeof children === \"function\" ? children(titleProps) : children }),\n            /* @__PURE__ */ jsx(DismissButton, { onDismiss: state.close })\n          ]\n        }\n      ) })\n    ] });\n  }\n);\nFreeSoloPopover.displayName = \"NextUI.FreeSoloPopover\";\nvar free_solo_popover_default = FreeSoloPopover;\n\nexport {\n  free_solo_popover_default\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaDialogProps} from '@react-types/dialog';\nimport {DOMAttributes, FocusableElement} from '@react-types/shared';\nimport {filterDOMProps, useSlotId} from '@react-aria/utils';\nimport {focusSafely} from '@react-aria/focus';\nimport {RefObject, useEffect, useRef} from 'react';\nimport {useOverlayFocusContain} from '@react-aria/overlays';\n\nexport interface DialogAria {\n  /** Props for the dialog container element. */\n  dialogProps: DOMAttributes,\n\n  /** Props for the dialog title element. */\n  titleProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a dialog component.\n * A dialog is an overlay shown above other content in an application.\n */\nexport function useDialog(props: AriaDialogProps, ref: RefObject<FocusableElement>): DialogAria {\n  let {role = 'dialog'} = props;\n  let titleId: string | undefined = useSlotId();\n  titleId = props['aria-label'] ? undefined : titleId;\n\n  let isRefocusing = useRef(false);\n\n  // Focus the dialog itself on mount, unless a child element is already focused.\n  useEffect(() => {\n    if (ref.current && !ref.current.contains(document.activeElement)) {\n      focusSafely(ref.current);\n\n      // Safari on iOS does not move the VoiceOver cursor to the dialog\n      // or announce that it has opened until it has rendered. A workaround\n      // is to wait for half a second, then blur and re-focus the dialog.\n      let timeout = setTimeout(() => {\n        if (document.activeElement === ref.current) {\n          isRefocusing.current = true;\n          if (ref.current) {\n            ref.current.blur();\n            focusSafely(ref.current);\n          }\n          isRefocusing.current = false;\n        }\n      }, 500);\n\n      return () => {\n        clearTimeout(timeout);\n      };\n    }\n  }, [ref]);\n\n  useOverlayFocusContain();\n\n  // We do not use aria-modal due to a Safari bug which forces the first focusable element to be focused\n  // on mount when inside an iframe, no matter which element we programmatically focus.\n  // See https://bugs.webkit.org/show_bug.cgi?id=211934.\n  // useModal sets aria-hidden on all elements outside the dialog, so the dialog will behave as a modal\n  // even without aria-modal on the dialog itself.\n  return {\n    dialogProps: {\n      ...filterDOMProps(props, {labelable: true}),\n      role,\n      tabIndex: -1,\n      'aria-labelledby': props['aria-labelledby'] || titleId,\n      // Prevent blur events from reaching useOverlay, which may cause\n      // popovers to close. Since focus is contained within the dialog,\n      // we don't want this to occur due to the above useEffect.\n      onBlur: e => {\n        if (isRefocusing.current) {\n          e.stopPropagation();\n        }\n      }\n    },\n    titleProps: {\n      id: titleId\n    }\n  };\n}\n", "\"use client\";\n\n// src/popover-context.ts\nimport { createContext } from \"@nextui-org/react-utils\";\nvar [PopoverProvider, usePopoverContext] = createContext({\n  name: \"PopoverContext\",\n  errorMessage: \"usePopoverContext: `context` is undefined. Seems you forgot to wrap all popover components within `<Popover />`\"\n});\n\nexport {\n  PopoverProvider,\n  usePopoverContext\n};\n", "\"use client\";\nimport {\n  usePopoverContext\n} from \"./chunk-SQ3I4X62.mjs\";\n\n// src/popover-content.tsx\nimport { useMemo, useRef } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { DismissButton } from \"@react-aria/overlays\";\nimport { TRANSITION_VARIANTS } from \"@nextui-org/framer-utils\";\nimport { m, domAnimation, LazyMotion } from \"framer-motion\";\nimport { getTransformOrigins } from \"@nextui-org/aria-utils\";\nimport { useDialog } from \"@react-aria/dialog\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nvar PopoverContent = forwardRef((props, _) => {\n  const { as, children, className, ...otherProps } = props;\n  const {\n    Component: OverlayComponent,\n    placement,\n    backdrop,\n    motionProps,\n    disableAnimation,\n    getPopoverProps,\n    getDialogProps,\n    getBackdropProps,\n    getContentProps,\n    isNonModal,\n    onClose\n  } = usePopoverContext();\n  const dialogRef = useRef(null);\n  const { dialogProps: ariaDialogProps, titleProps } = useDialog({}, dialogRef);\n  const dialogProps = getDialogProps({\n    ref: dialogRef,\n    ...ariaDialogProps,\n    ...otherProps\n  });\n  const Component = as || OverlayComponent || \"div\";\n  const content = /* @__PURE__ */ jsxs(Fragment, { children: [\n    !isNonModal && /* @__PURE__ */ jsx(DismissButton, { onDismiss: onClose }),\n    /* @__PURE__ */ jsx(Component, { ...dialogProps, children: /* @__PURE__ */ jsx(\"div\", { ...getContentProps({ className }), children: typeof children === \"function\" ? children(titleProps) : children }) }),\n    /* @__PURE__ */ jsx(DismissButton, { onDismiss: onClose })\n  ] });\n  const backdropContent = useMemo(() => {\n    if (backdrop === \"transparent\") {\n      return null;\n    }\n    if (disableAnimation) {\n      return /* @__PURE__ */ jsx(\"div\", { ...getBackdropProps() });\n    }\n    return /* @__PURE__ */ jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsx(\n      m.div,\n      {\n        animate: \"enter\",\n        exit: \"exit\",\n        initial: \"exit\",\n        variants: TRANSITION_VARIANTS.fade,\n        ...getBackdropProps()\n      }\n    ) });\n  }, [backdrop, disableAnimation, getBackdropProps]);\n  const contents = disableAnimation ? content : /* @__PURE__ */ jsx(LazyMotion, { features: domAnimation, children: /* @__PURE__ */ jsx(\n    m.div,\n    {\n      animate: \"enter\",\n      exit: \"exit\",\n      initial: \"initial\",\n      style: {\n        ...getTransformOrigins(placement === \"center\" ? \"top\" : placement)\n      },\n      variants: TRANSITION_VARIANTS.scaleSpringOpacity,\n      ...motionProps,\n      children: content\n    }\n  ) });\n  return /* @__PURE__ */ jsxs(\"div\", { ...getPopoverProps(), children: [\n    backdropContent,\n    contents\n  ] });\n});\nPopoverContent.displayName = \"NextUI.PopoverContent\";\nvar popover_content_default = PopoverContent;\n\nexport {\n  popover_content_default\n};\n", "\"use client\";\nimport {\n  usePopoverContext\n} from \"./chunk-SQ3I4X62.mjs\";\n\n// src/popover-trigger.tsx\nimport { Children, cloneElement, useMemo } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { pickChildren } from \"@nextui-org/react-utils\";\nimport { useAriaButton } from \"@nextui-org/use-aria-button\";\nimport { Button } from \"@nextui-org/button\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar PopoverTrigger = forwardRef((props, _) => {\n  const { triggerRef, getTriggerProps } = usePopoverContext();\n  const { children, ...otherProps } = props;\n  const child = useMemo(() => {\n    if (typeof children === \"string\")\n      return /* @__PURE__ */ jsx(\"p\", { children });\n    return Children.only(children);\n  }, [children]);\n  const { onPress, isDisabled, ...restProps } = useMemo(() => {\n    return getTriggerProps(mergeProps(otherProps, child.props), child.ref);\n  }, [getTriggerProps, child.props, otherProps, child.ref]);\n  const [, triggerChildren] = pickChildren(children, Button);\n  const { buttonProps } = useAriaButton({ onPress, isDisabled }, triggerRef);\n  const hasNextUIButton = useMemo(() => {\n    return (triggerChildren == null ? void 0 : triggerChildren[0]) !== void 0;\n  }, [triggerChildren]);\n  return cloneElement(\n    child,\n    mergeProps(restProps, hasNextUIButton ? { onPress, isDisabled } : buttonProps)\n  );\n});\nPopoverTrigger.displayName = \"NextUI.PopoverTrigger\";\nvar popover_trigger_default = PopoverTrigger;\n\nexport {\n  popover_trigger_default\n};\n", "\"use client\";\nimport {\n  PopoverProvider\n} from \"./chunk-SQ3I4X62.mjs\";\nimport {\n  usePopover\n} from \"./chunk-HWCD2GH5.mjs\";\n\n// src/popover.tsx\nimport { Children } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { Overlay } from \"@react-aria/overlays\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Popover = forwardRef((props, ref) => {\n  const { children, ...otherProps } = props;\n  const context = usePopover({ ...otherProps, ref });\n  const [trigger, content] = Children.toArray(children);\n  const overlay = /* @__PURE__ */ jsx(Overlay, { portalContainer: context.portalContainer, children: content });\n  return /* @__PURE__ */ jsxs(PopoverProvider, { value: context, children: [\n    trigger,\n    context.disableAnimation && context.isOpen ? overlay : /* @__PURE__ */ jsx(AnimatePresence, { children: context.isOpen ? overlay : null })\n  ] });\n});\nPopover.displayName = \"NextUI.Popover\";\nvar popover_default = Popover;\n\nexport {\n  popover_default\n};\n", "\"use client\";\n\n// src/base/menu-section-base.tsx\nimport { BaseSection } from \"@nextui-org/aria-utils\";\nvar MenuSectionBase = BaseSection;\nvar menu_section_base_default = MenuSectionBase;\n\nexport {\n  menu_section_base_default\n};\n", "\"use client\";\n\n// src/menu-selected-icon.tsx\nimport { jsx } from \"react/jsx-runtime\";\nfunction MenuSelectedIcon(props) {\n  const { isSelected, disableAnimation, ...otherProps } = props;\n  return /* @__PURE__ */ jsx(\n    \"svg\",\n    {\n      \"aria-hidden\": \"true\",\n      \"data-selected\": isSelected,\n      role: \"presentation\",\n      viewBox: \"0 0 17 18\",\n      ...otherProps,\n      children: /* @__PURE__ */ jsx(\n        \"polyline\",\n        {\n          fill: \"none\",\n          points: \"1 9 7 14 15 4\",\n          stroke: \"currentColor\",\n          strokeDasharray: 22,\n          strokeDashoffset: isSelected ? 44 : 66,\n          strokeLinecap: \"round\",\n          strokeLinejoin: \"round\",\n          strokeWidth: 1.5,\n          style: !disableAnimation ? {\n            transition: \"stroke-dashoffset 200ms ease\"\n          } : {}\n        }\n      )\n    }\n  );\n}\n\nexport {\n  MenuSelectedIcon\n};\n", "\"use client\";\n\n// src/use-menu-item.ts\nimport { useMemo, useRef, useCallback } from \"react\";\nimport { menuItem } from \"@nextui-org/theme\";\nimport {\n  mapPropsVariants,\n  useProviderContext\n} from \"@nextui-org/system\";\nimport { useFocusRing } from \"@react-aria/focus\";\nimport { clsx, dataAttr, objectToDeps, removeEvents } from \"@nextui-org/shared-utils\";\nimport { useAriaMenuItem } from \"@nextui-org/use-aria-menu\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { useIsMobile } from \"@nextui-org/use-is-mobile\";\nimport { filterDOMProps } from \"@nextui-org/react-utils\";\nfunction useMenuItem(originalProps) {\n  var _a, _b;\n  const globalContext = useProviderContext();\n  const [props, variantProps] = mapPropsVariants(originalProps, menuItem.variantKeys);\n  const {\n    as,\n    item,\n    state,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    isVirtualized,\n    selectedIcon,\n    className,\n    classNames,\n    onAction,\n    autoFocus,\n    onClick,\n    onPress,\n    onPressStart,\n    onPressUp,\n    onPressEnd,\n    onPressChange,\n    hideSelectedIcon = false,\n    isReadOnly = false,\n    closeOnSelect,\n    onClose,\n    ...otherProps\n  } = props;\n  const disableAnimation = (_b = (_a = originalProps.disableAnimation) != null ? _a : globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _b : false;\n  const domRef = useRef(null);\n  const Component = as || ((otherProps == null ? void 0 : otherProps.href) ? \"a\" : \"li\");\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const { rendered, key } = item;\n  const isDisabled = state.disabledKeys.has(key) || originalProps.isDisabled;\n  const isSelectable = state.selectionManager.selectionMode !== \"none\";\n  const isMobile = useIsMobile();\n  const { isFocusVisible, focusProps } = useFocusRing({\n    autoFocus\n  });\n  const {\n    isHovered,\n    isPressed,\n    isFocused,\n    isSelected,\n    menuItemProps,\n    labelProps,\n    descriptionProps,\n    keyboardShortcutProps\n  } = useAriaMenuItem(\n    {\n      key,\n      onClose,\n      isDisabled,\n      onPress,\n      onClick,\n      onPressStart,\n      onPressUp,\n      onPressEnd,\n      onPressChange,\n      \"aria-label\": props[\"aria-label\"],\n      closeOnSelect,\n      isVirtualized,\n      onAction\n    },\n    state,\n    domRef\n  );\n  let itemProps = menuItemProps;\n  const slots = useMemo(\n    () => menuItem({\n      ...variantProps,\n      isDisabled,\n      disableAnimation\n    }),\n    [objectToDeps(variantProps), isDisabled, disableAnimation]\n  );\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  if (isReadOnly) {\n    itemProps = removeEvents(itemProps);\n  }\n  const getItemProps = (props2 = {}) => ({\n    ref: domRef,\n    ...mergeProps(\n      isReadOnly ? {} : focusProps,\n      filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }),\n      itemProps,\n      props2\n    ),\n    \"data-focus\": dataAttr(isFocused),\n    \"data-selectable\": dataAttr(isSelectable),\n    \"data-hover\": dataAttr(isMobile ? isHovered || isPressed : isHovered),\n    \"data-disabled\": dataAttr(isDisabled),\n    \"data-selected\": dataAttr(isSelected),\n    \"data-pressed\": dataAttr(isPressed),\n    \"data-focus-visible\": dataAttr(isFocusVisible),\n    className: slots.base({ class: clsx(baseStyles, props2.className) })\n  });\n  const getLabelProps = (props2 = {}) => ({\n    ...mergeProps(labelProps, props2),\n    className: slots.title({ class: classNames == null ? void 0 : classNames.title })\n  });\n  const getDescriptionProps = (props2 = {}) => ({\n    ...mergeProps(descriptionProps, props2),\n    className: slots.description({ class: classNames == null ? void 0 : classNames.description })\n  });\n  const getKeyboardShortcutProps = (props2 = {}) => ({\n    ...mergeProps(keyboardShortcutProps, props2),\n    className: slots.shortcut({ class: classNames == null ? void 0 : classNames.shortcut })\n  });\n  const getSelectedIconProps = useCallback(\n    (props2 = {}) => {\n      return {\n        \"aria-hidden\": dataAttr(true),\n        \"data-disabled\": dataAttr(isDisabled),\n        className: slots.selectedIcon({ class: classNames == null ? void 0 : classNames.selectedIcon }),\n        ...props2\n      };\n    },\n    [isDisabled, slots, classNames]\n  );\n  return {\n    Component,\n    domRef,\n    slots,\n    classNames,\n    isSelectable,\n    isSelected,\n    isDisabled,\n    rendered,\n    shortcut,\n    description,\n    startContent,\n    endContent,\n    selectedIcon,\n    disableAnimation,\n    getItemProps,\n    getLabelProps,\n    hideSelectedIcon,\n    getDescriptionProps,\n    getKeyboardShortcutProps,\n    getSelectedIconProps\n  };\n}\n\nexport {\n  useMenuItem\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {isAppleDevice, isMac} from '@react-aria/utils';\n\ninterface Event {\n  altKey: boolean,\n  ctrlKey: boolean,\n  metaKey: boolean\n}\n\nexport function isNonContiguousSelectionModifier(e: Event) {\n  // Ctrl + Arrow Up/Arrow Down has a system wide meaning on macOS, so use Alt instead.\n  // On Windows and Ubuntu, Alt + Space has a system wide meaning.\n  return isAppleDevice() ? e.altKey : e.ctrlKey;\n}\n\nexport function isCtrlKeyPressed(e: Event) {\n  if (isMac()) {\n    return e.metaKey;\n  }\n\n  return e.ctrlKey;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, Key, KeyboardDelegate} from '@react-types/shared';\nimport {KeyboardEvent, useRef} from 'react';\nimport {MultipleSelectionManager} from '@react-stately/selection';\n\n/**\n * Controls how long to wait before clearing the typeahead buffer.\n */\nconst TYPEAHEAD_DEBOUNCE_WAIT_MS = 1000; // 1 second\n\nexport interface AriaTypeSelectOptions {\n  /**\n   * A delegate that returns collection item keys with respect to visual layout.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * Called when an item is focused by typing.\n   */\n  onTypeSelect?: (key: Key) => void\n}\n\nexport interface TypeSelectAria {\n  /**\n   * Props to be spread on the owner of the options.\n   */\n  typeSelectProps: DOMAttributes\n}\n\n/**\n * Handles typeahead interactions with collections.\n */\nexport function useTypeSelect(options: AriaTypeSelectOptions): TypeSelectAria {\n  let {keyboardDelegate, selectionManager, onTypeSelect} = options;\n  let state = useRef({\n    search: '',\n    timeout: null\n  }).current;\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    let character = getStringForKey(e.key);\n    if (!character || e.ctrlKey || e.metaKey || !e.currentTarget.contains(e.target as HTMLElement)) {\n      return;\n    }\n\n    // Do not propagate the Spacebar event if it's meant to be part of the search.\n    // When we time out, the search term becomes empty, hence the check on length.\n    // Trimming is to account for the case of pressing the Spacebar more than once,\n    // which should cycle through the selection/deselection of the focused item.\n    if (character === ' ' && state.search.trim().length > 0) {\n      e.preventDefault();\n      if (!('continuePropagation' in e)) {\n        e.stopPropagation();\n      }\n    }\n\n    state.search += character;\n\n    // Use the delegate to find a key to focus.\n    // Prioritize items after the currently focused item, falling back to searching the whole list.\n    let key = keyboardDelegate.getKeyForSearch(state.search, selectionManager.focusedKey);\n\n    // If no key found, search from the top.\n    if (key == null) {\n      key = keyboardDelegate.getKeyForSearch(state.search);\n    }\n\n    if (key != null) {\n      selectionManager.setFocusedKey(key);\n      if (onTypeSelect) {\n        onTypeSelect(key);\n      }\n    }\n\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(() => {\n      state.search = '';\n    }, TYPEAHEAD_DEBOUNCE_WAIT_MS);\n  };\n\n  return {\n    typeSelectProps: {\n      // Using a capturing listener to catch the keydown event before\n      // other hooks in order to handle the Spacebar event.\n      onKeyDownCapture: keyboardDelegate.getKeyForSearch ? onKeyDown : null\n    }\n  };\n}\n\nfunction getStringForKey(key: string) {\n  // If the key is of length 1, it is an ASCII value.\n  // Otherwise, if there are no ASCII characters in the key name,\n  // it is a Unicode character.\n  // See https://www.w3.org/TR/uievents-key/\n  if (key.length === 1 || !/^[A-Z]/i.test(key)) {\n    return key;\n  }\n\n  return '';\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, FocusStrategy, Key, KeyboardDelegate} from '@react-types/shared';\nimport {flushSync} from 'react-dom';\nimport {FocusEvent, KeyboardEvent, RefObject, useEffect, useRef} from 'react';\nimport {focusSafely, getFocusableTreeWalker} from '@react-aria/focus';\nimport {focusWithoutScrolling, mergeProps, scrollIntoView, scrollIntoViewport, useEvent, useRouter} from '@react-aria/utils';\nimport {getInteractionModality} from '@react-aria/interactions';\nimport {isCtrlKeyPressed, isNonContiguousSelectionModifier} from './utils';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {useLocale} from '@react-aria/i18n';\nimport {useTypeSelect} from './useTypeSelect';\n\nexport interface AriaSelectableCollectionOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate: KeyboardDelegate,\n  /**\n   * The ref attached to the element representing the collection.\n   */\n  ref: RefObject<HTMLElement>,\n  /**\n   * Whether the collection or one of its items should be automatically focused upon render.\n   * @default false\n   */\n  autoFocus?: boolean | FocusStrategy,\n  /**\n   * Whether focus should wrap around when the end/start is reached.\n   * @default false\n   */\n  shouldFocusWrap?: boolean,\n  /**\n   * Whether the collection allows empty selection.\n   * @default false\n   */\n  disallowEmptySelection?: boolean,\n  /**\n   * Whether the collection allows the user to select all items via keyboard shortcut.\n   * @default false\n   */\n  disallowSelectAll?: boolean,\n  /**\n   * Whether selection should occur automatically on focus.\n   * @default false\n   */\n  selectOnFocus?: boolean,\n  /**\n   * Whether typeahead is disabled.\n   * @default false\n   */\n  disallowTypeAhead?: boolean,\n  /**\n   * Whether the collection items should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /**\n   * Whether navigation through tab key is enabled.\n   */\n  allowsTabNavigation?: boolean,\n  /**\n   * Whether the collection items are contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * The ref attached to the scrollable body. Used to provide automatic scrolling on item focus for non-virtualized collections.\n   * If not provided, defaults to the collection ref.\n   */\n  scrollRef?: RefObject<HTMLElement>,\n  /**\n   * The behavior of links in the collection.\n   * - 'action': link behaves like onAction.\n   * - 'selection': link follows selection interactions (e.g. if URL drives selection).\n   * - 'override': links override all other interactions (link items are not selectable).\n   * @default 'action'\n   */\n  linkBehavior?: 'action' | 'selection' | 'override'\n}\n\nexport interface SelectableCollectionAria {\n  /** Props for the collection element. */\n  collectionProps: DOMAttributes\n}\n\n/**\n * Handles interactions with selectable collections.\n */\nexport function useSelectableCollection(options: AriaSelectableCollectionOptions): SelectableCollectionAria {\n  let {\n    selectionManager: manager,\n    keyboardDelegate: delegate,\n    ref,\n    autoFocus = false,\n    shouldFocusWrap = false,\n    disallowEmptySelection = false,\n    disallowSelectAll = false,\n    selectOnFocus = manager.selectionBehavior === 'replace',\n    disallowTypeAhead = false,\n    shouldUseVirtualFocus,\n    allowsTabNavigation = false,\n    isVirtualized,\n    // If no scrollRef is provided, assume the collection ref is the scrollable region\n    scrollRef = ref,\n    linkBehavior = 'action'\n  } = options;\n  let {direction} = useLocale();\n  let router = useRouter();\n\n  let onKeyDown = (e: KeyboardEvent) => {\n    // Prevent option + tab from doing anything since it doesn't move focus to the cells, only buttons/checkboxes\n    if (e.altKey && e.key === 'Tab') {\n      e.preventDefault();\n    }\n\n    // Keyboard events bubble through portals. Don't handle keyboard events\n    // for elements outside the collection (e.g. menus).\n    if (!ref.current.contains(e.target as Element)) {\n      return;\n    }\n\n    const navigateToKey = (key: Key | undefined, childFocus?: FocusStrategy) => {\n      if (key != null) {\n        if (manager.isLink(key) && linkBehavior === 'selection' && selectOnFocus && !isNonContiguousSelectionModifier(e)) {\n          // Set focused key and re-render synchronously to bring item into view if needed.\n          flushSync(() => {\n            manager.setFocusedKey(key, childFocus);\n          });\n\n          let item = scrollRef.current.querySelector(`[data-key=\"${CSS.escape(key.toString())}\"]`);\n          let itemProps = manager.getItemProps(key);\n          router.open(item, e, itemProps.href, itemProps.routerOptions);\n\n          return;\n        }\n\n        manager.setFocusedKey(key, childFocus);\n\n        if (manager.isLink(key) && linkBehavior === 'override') {\n          return;\n        }\n\n        if (e.shiftKey && manager.selectionMode === 'multiple') {\n          manager.extendSelection(key);\n        } else if (selectOnFocus && !isNonContiguousSelectionModifier(e)) {\n          manager.replaceSelection(key);\n        }\n      }\n    };\n\n    switch (e.key) {\n      case 'ArrowDown': {\n        if (delegate.getKeyBelow) {\n          e.preventDefault();\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyBelow(manager.focusedKey)\n              : delegate.getFirstKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getFirstKey?.(manager.focusedKey);\n          }\n          navigateToKey(nextKey);\n        }\n        break;\n      }\n      case 'ArrowUp': {\n        if (delegate.getKeyAbove) {\n          e.preventDefault();\n          let nextKey = manager.focusedKey != null\n              ? delegate.getKeyAbove(manager.focusedKey)\n              : delegate.getLastKey?.();\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = delegate.getLastKey?.(manager.focusedKey);\n          }\n          navigateToKey(nextKey);\n        }\n        break;\n      }\n      case 'ArrowLeft': {\n        if (delegate.getKeyLeftOf) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyLeftOf(manager.focusedKey);\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = direction === 'rtl' ? delegate.getFirstKey?.(manager.focusedKey) : delegate.getLastKey?.(manager.focusedKey);\n          }\n          navigateToKey(nextKey, direction === 'rtl' ? 'first' : 'last');\n        }\n        break;\n      }\n      case 'ArrowRight': {\n        if (delegate.getKeyRightOf) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyRightOf(manager.focusedKey);\n          if (nextKey == null && shouldFocusWrap) {\n            nextKey = direction === 'rtl' ? delegate.getLastKey?.(manager.focusedKey) : delegate.getFirstKey?.(manager.focusedKey);\n          }\n          navigateToKey(nextKey, direction === 'rtl' ? 'last' : 'first');\n        }\n        break;\n      }\n      case 'Home':\n        if (delegate.getFirstKey) {\n          e.preventDefault();\n          let firstKey = delegate.getFirstKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(firstKey);\n          if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n            manager.extendSelection(firstKey);\n          } else if (selectOnFocus) {\n            manager.replaceSelection(firstKey);\n          }\n        }\n        break;\n      case 'End':\n        if (delegate.getLastKey) {\n          e.preventDefault();\n          let lastKey = delegate.getLastKey(manager.focusedKey, isCtrlKeyPressed(e));\n          manager.setFocusedKey(lastKey);\n          if (isCtrlKeyPressed(e) && e.shiftKey && manager.selectionMode === 'multiple') {\n            manager.extendSelection(lastKey);\n          } else if (selectOnFocus) {\n            manager.replaceSelection(lastKey);\n          }\n        }\n        break;\n      case 'PageDown':\n        if (delegate.getKeyPageBelow) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyPageBelow(manager.focusedKey);\n          navigateToKey(nextKey);\n        }\n        break;\n      case 'PageUp':\n        if (delegate.getKeyPageAbove) {\n          e.preventDefault();\n          let nextKey = delegate.getKeyPageAbove(manager.focusedKey);\n          navigateToKey(nextKey);\n        }\n        break;\n      case 'a':\n        if (isCtrlKeyPressed(e) && manager.selectionMode === 'multiple' && disallowSelectAll !== true) {\n          e.preventDefault();\n          manager.selectAll();\n        }\n        break;\n      case 'Escape':\n        if (!disallowEmptySelection && manager.selectedKeys.size !== 0) {\n          e.stopPropagation();\n          e.preventDefault();\n          manager.clearSelection();\n        }\n        break;\n      case 'Tab': {\n        if (!allowsTabNavigation) {\n          // There may be elements that are \"tabbable\" inside a collection (e.g. in a grid cell).\n          // However, collections should be treated as a single tab stop, with arrow key navigation internally.\n          // We don't control the rendering of these, so we can't override the tabIndex to prevent tabbing.\n          // Instead, we handle the Tab key, and move focus manually to the first/last tabbable element\n          // in the collection, so that the browser default behavior will apply starting from that element\n          // rather than the currently focused one.\n          if (e.shiftKey) {\n            ref.current.focus();\n          } else {\n            let walker = getFocusableTreeWalker(ref.current, {tabbable: true});\n            let next: FocusableElement;\n            let last: FocusableElement;\n            do {\n              last = walker.lastChild() as FocusableElement;\n              if (last) {\n                next = last;\n              }\n            } while (last);\n\n            if (next && !next.contains(document.activeElement)) {\n              focusWithoutScrolling(next);\n            }\n          }\n          break;\n        }\n      }\n    }\n  };\n\n  // Store the scroll position so we can restore it later.\n  let scrollPos = useRef({top: 0, left: 0});\n  useEvent(scrollRef, 'scroll', isVirtualized ? null : () => {\n    scrollPos.current = {\n      top: scrollRef.current.scrollTop,\n      left: scrollRef.current.scrollLeft\n    };\n  });\n\n  let onFocus = (e: FocusEvent) => {\n    if (manager.isFocused) {\n      // If a focus event bubbled through a portal, reset focus state.\n      if (!e.currentTarget.contains(e.target)) {\n        manager.setFocused(false);\n      }\n\n      return;\n    }\n\n    // Focus events can bubble through portals. Ignore these events.\n    if (!e.currentTarget.contains(e.target)) {\n      return;\n    }\n\n    manager.setFocused(true);\n\n    if (manager.focusedKey == null) {\n      let navigateToFirstKey = (key: Key | undefined) => {\n        if (key != null) {\n          manager.setFocusedKey(key);\n          if (selectOnFocus) {\n            manager.replaceSelection(key);\n          }\n        }\n      };\n      // If the user hasn't yet interacted with the collection, there will be no focusedKey set.\n      // Attempt to detect whether the user is tabbing forward or backward into the collection\n      // and either focus the first or last item accordingly.\n      let relatedTarget = e.relatedTarget as Element;\n      if (relatedTarget && (e.currentTarget.compareDocumentPosition(relatedTarget) & Node.DOCUMENT_POSITION_FOLLOWING)) {\n        navigateToFirstKey(manager.lastSelectedKey ?? delegate.getLastKey());\n      } else {\n        navigateToFirstKey(manager.firstSelectedKey ?? delegate.getFirstKey());\n      }\n    } else if (!isVirtualized) {\n      // Restore the scroll position to what it was before.\n      scrollRef.current.scrollTop = scrollPos.current.top;\n      scrollRef.current.scrollLeft = scrollPos.current.left;\n    }\n\n    if (!isVirtualized && manager.focusedKey != null) {\n      // Refocus and scroll the focused item into view if it exists within the scrollable region.\n      let element = scrollRef.current.querySelector(`[data-key=\"${CSS.escape(manager.focusedKey.toString())}\"]`) as HTMLElement;\n      if (element) {\n        // This prevents a flash of focus on the first/last element in the collection, or the collection itself.\n        if (!element.contains(document.activeElement)) {\n          focusWithoutScrolling(element);\n        }\n\n        let modality = getInteractionModality();\n        if (modality === 'keyboard') {\n          scrollIntoViewport(element, {containingElement: ref.current});\n        }\n      }\n    }\n  };\n\n  let onBlur = (e) => {\n    // Don't set blurred and then focused again if moving focus within the collection.\n    if (!e.currentTarget.contains(e.relatedTarget as HTMLElement)) {\n      manager.setFocused(false);\n    }\n  };\n\n  const autoFocusRef = useRef(autoFocus);\n  useEffect(() => {\n    if (autoFocusRef.current) {\n      let focusedKey = null;\n\n      // Check focus strategy to determine which item to focus\n      if (autoFocus === 'first') {\n        focusedKey = delegate.getFirstKey();\n      } if (autoFocus === 'last') {\n        focusedKey = delegate.getLastKey();\n      }\n\n      // If there are any selected keys, make the first one the new focus target\n      let selectedKeys = manager.selectedKeys;\n      if (selectedKeys.size) {\n        for (let key of selectedKeys) {\n          if (manager.canSelectItem(key)) {\n            focusedKey = key;\n            break;\n          }\n        }\n      }\n\n      manager.setFocused(true);\n      manager.setFocusedKey(focusedKey);\n\n      // If no default focus key is selected, focus the collection itself.\n      if (focusedKey == null && !shouldUseVirtualFocus) {\n        focusSafely(ref.current);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // If not virtualized, scroll the focused element into view when the focusedKey changes.\n  // When virtualized, Virtualizer handles this internally.\n  let lastFocusedKey = useRef(manager.focusedKey);\n  useEffect(() => {\n    let modality = getInteractionModality();\n    if (manager.isFocused && manager.focusedKey != null && scrollRef?.current) {\n      let element = scrollRef.current.querySelector(`[data-key=\"${CSS.escape(manager.focusedKey.toString())}\"]`) as HTMLElement;\n      if (element && (modality === 'keyboard' || autoFocusRef.current)) {\n        if (!isVirtualized) {\n          scrollIntoView(scrollRef.current, element);\n        }\n        // Avoid scroll in iOS VO, since it may cause overlay to close (i.e. RAC submenu)\n        if (modality !== 'virtual') {\n          scrollIntoViewport(element, {containingElement: ref.current});\n        }\n      }\n    }\n\n    // If the focused key becomes null (e.g. the last item is deleted), focus the whole collection.\n    if (manager.isFocused && manager.focusedKey == null && lastFocusedKey.current != null) {\n      focusSafely(ref.current);\n    }\n\n    lastFocusedKey.current = manager.focusedKey;\n    autoFocusRef.current = false;\n  }, [isVirtualized, scrollRef, manager.focusedKey, manager.isFocused, ref]);\n\n  let handlers = {\n    onKeyDown,\n    onFocus,\n    onBlur,\n    onMouseDown(e) {\n      // Ignore events that bubbled through portals.\n      if (scrollRef.current === e.target) {\n        // Prevent focus going to the collection when clicking on the scrollbar.\n        e.preventDefault();\n      }\n    }\n  };\n\n  let {typeSelectProps} = useTypeSelect({\n    keyboardDelegate: delegate,\n    selectionManager: manager\n  });\n\n  if (!disallowTypeAhead) {\n    handlers = mergeProps(typeSelectProps, handlers);\n  }\n\n  // If nothing is focused within the collection, make the collection itself tabbable.\n  // This will be marshalled to either the first or last item depending on where focus came from.\n  // If using virtual focus, don't set a tabIndex at all so that VoiceOver on iOS 14 doesn't try\n  // to move real DOM focus to the element anyway.\n  let tabIndex: number;\n  if (!shouldUseVirtualFocus) {\n    tabIndex = manager.focusedKey == null ? 0 : -1;\n  }\n\n  return {\n    collectionProps: {\n      ...handlers,\n      tabIndex\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes, FocusableElement, Key, LongPressEvent, PressEvent} from '@react-types/shared';\nimport {focusSafely} from '@react-aria/focus';\nimport {isCtrlKeyPressed, isNonContiguousSelectionModifier} from './utils';\nimport {mergeProps, openLink, useRouter} from '@react-aria/utils';\nimport {MultipleSelectionManager} from '@react-stately/selection';\nimport {PressProps, useLongPress, usePress} from '@react-aria/interactions';\nimport {RefObject, useEffect, useRef} from 'react';\n\nexport interface SelectableItemOptions {\n  /**\n   * An interface for reading and updating multiple selection state.\n   */\n  selectionManager: MultipleSelectionManager,\n  /**\n   * A unique key for the item.\n   */\n  key: Key,\n  /**\n   * Ref to the item.\n   */\n  ref: RefObject<FocusableElement>,\n  /**\n   * By default, selection occurs on pointer down. This can be strange if selecting an\n   * item causes the UI to disappear immediately (e.g. menus).\n   */\n  shouldSelectOnPressUp?: boolean,\n  /**\n   * Whether selection requires the pointer/mouse down and up events to occur on the same target or triggers selection on\n   * the target of the pointer/mouse up event.\n   */\n  allowsDifferentPressOrigin?: boolean,\n  /**\n   * Whether the option is contained in a virtual scroller.\n   */\n  isVirtualized?: boolean,\n  /**\n   * Function to focus the item.\n   */\n  focus?: () => void,\n  /**\n   * Whether the option should use virtual focus instead of being focused directly.\n   */\n  shouldUseVirtualFocus?: boolean,\n  /** Whether the item is disabled. */\n  isDisabled?: boolean,\n  /**\n   * Handler that is called when a user performs an action on the item. The exact user event depends on\n   * the collection's `selectionBehavior` prop and the interaction modality.\n   */\n  onAction?: () => void,\n  /**\n   * The behavior of links in the collection.\n   * - 'action': link behaves like onAction.\n   * - 'selection': link follows selection interactions (e.g. if URL drives selection).\n   * - 'override': links override all other interactions (link items are not selectable).\n   * - 'none': links are disabled for both selection and actions (e.g. handled elsewhere).\n   * @default 'action'\n   */\n  linkBehavior?: 'action' | 'selection' | 'override' | 'none'\n}\n\nexport interface SelectableItemStates {\n  /** Whether the item is currently in a pressed state. */\n  isPressed: boolean,\n  /** Whether the item is currently selected. */\n  isSelected: boolean,\n  /** Whether the item is currently focused. */\n  isFocused: boolean,\n  /**\n   * Whether the item is non-interactive, i.e. both selection and actions are disabled and the item may\n   * not be focused. Dependent on `disabledKeys` and `disabledBehavior`.\n   */\n  isDisabled: boolean,\n  /**\n   * Whether the item may be selected, dependent on `selectionMode`, `disabledKeys`, and `disabledBehavior`.\n   */\n  allowsSelection: boolean,\n  /**\n   * Whether the item has an action, dependent on `onAction`, `disabledKeys`,\n   * and `disabledBehavior`. It may also change depending on the current selection state\n   * of the list (e.g. when selection is primary). This can be used to enable or disable hover\n   * styles or other visual indications of interactivity.\n   */\n  hasAction: boolean\n}\n\nexport interface SelectableItemAria extends SelectableItemStates {\n  /**\n   * Props to be spread on the item root node.\n   */\n  itemProps: DOMAttributes\n}\n\n/**\n * Handles interactions with an item in a selectable collection.\n */\nexport function useSelectableItem(options: SelectableItemOptions): SelectableItemAria {\n  let {\n    selectionManager: manager,\n    key,\n    ref,\n    shouldSelectOnPressUp,\n    shouldUseVirtualFocus,\n    focus,\n    isDisabled,\n    onAction,\n    allowsDifferentPressOrigin,\n    linkBehavior = 'action'\n  } = options;\n  let router = useRouter();\n\n  let onSelect = (e: PressEvent | LongPressEvent | PointerEvent) => {\n    if (e.pointerType === 'keyboard' && isNonContiguousSelectionModifier(e)) {\n      manager.toggleSelection(key);\n    } else {\n      if (manager.selectionMode === 'none') {\n        return;\n      }\n\n      if (manager.isLink(key)) {\n        if (linkBehavior === 'selection') {\n          let itemProps = manager.getItemProps(key);\n          router.open(ref.current, e, itemProps.href, itemProps.routerOptions);\n          // Always set selected keys back to what they were so that select and combobox close.\n          manager.setSelectedKeys(manager.selectedKeys);\n          return;\n        } else if (linkBehavior === 'override' || linkBehavior === 'none') {\n          return;\n        }\n      }\n\n      if (manager.selectionMode === 'single') {\n        if (manager.isSelected(key) && !manager.disallowEmptySelection) {\n          manager.toggleSelection(key);\n        } else {\n          manager.replaceSelection(key);\n        }\n      } else if (e && e.shiftKey) {\n        manager.extendSelection(key);\n      } else if (manager.selectionBehavior === 'toggle' || (e && (isCtrlKeyPressed(e) || e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n        // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n        manager.toggleSelection(key);\n      } else {\n        manager.replaceSelection(key);\n      }\n    }\n  };\n\n  // Focus the associated DOM node when this item becomes the focusedKey\n  useEffect(() => {\n    let isFocused = key === manager.focusedKey;\n    if (isFocused && manager.isFocused && !shouldUseVirtualFocus) {\n      if (focus) {\n        focus();\n      } else if (document.activeElement !== ref.current) {\n        focusSafely(ref.current);\n      }\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [ref, key, manager.focusedKey, manager.childFocusStrategy, manager.isFocused, shouldUseVirtualFocus]);\n\n  isDisabled = isDisabled || manager.isDisabled(key);\n  // Set tabIndex to 0 if the element is focused, or -1 otherwise so that only the last focused\n  // item is tabbable.  If using virtual focus, don't set a tabIndex at all so that VoiceOver\n  // on iOS 14 doesn't try to move real DOM focus to the item anyway.\n  let itemProps: SelectableItemAria['itemProps'] = {};\n  if (!shouldUseVirtualFocus && !isDisabled) {\n    itemProps = {\n      tabIndex: key === manager.focusedKey ? 0 : -1,\n      onFocus(e) {\n        if (e.target === ref.current) {\n          manager.setFocusedKey(key);\n        }\n      }\n    };\n  } else if (isDisabled) {\n    itemProps.onMouseDown = (e) => {\n      // Prevent focus going to the body when clicking on a disabled item.\n      e.preventDefault();\n    };\n  }\n\n  // With checkbox selection, onAction (i.e. navigation) becomes primary, and occurs on a single click of the row.\n  // Clicking the checkbox enters selection mode, after which clicking anywhere on any row toggles selection for that row.\n  // With highlight selection, onAction is secondary, and occurs on double click. Single click selects the row.\n  // With touch, onAction occurs on single tap, and long press enters selection mode.\n  let isLinkOverride = manager.isLink(key) && linkBehavior === 'override';\n  let hasLinkAction = manager.isLink(key) && linkBehavior !== 'selection' && linkBehavior !== 'none';\n  let allowsSelection = !isDisabled && manager.canSelectItem(key) && !isLinkOverride;\n  let allowsActions = (onAction || hasLinkAction) && !isDisabled;\n  let hasPrimaryAction = allowsActions && (\n    manager.selectionBehavior === 'replace'\n      ? !allowsSelection\n      : !allowsSelection || manager.isEmpty\n  );\n  let hasSecondaryAction = allowsActions && allowsSelection && manager.selectionBehavior === 'replace';\n  let hasAction = hasPrimaryAction || hasSecondaryAction;\n  let modality = useRef(null);\n\n  let longPressEnabled = hasAction && allowsSelection;\n  let longPressEnabledOnPressStart = useRef(false);\n  let hadPrimaryActionOnPressStart = useRef(false);\n\n  let performAction = (e) => {\n    if (onAction) {\n      onAction();\n    }\n\n    if (hasLinkAction) {\n      let itemProps = manager.getItemProps(key);\n      router.open(ref.current, e, itemProps.href, itemProps.routerOptions);\n    }\n  };\n\n  // By default, selection occurs on pointer down. This can be strange if selecting an\n  // item causes the UI to disappear immediately (e.g. menus).\n  // If shouldSelectOnPressUp is true, we use onPressUp instead of onPressStart.\n  // onPress requires a pointer down event on the same element as pointer up. For menus,\n  // we want to be able to have the pointer down on the trigger that opens the menu and\n  // the pointer up on the menu item rather than requiring a separate press.\n  // For keyboard events, selection still occurs on key down.\n  let itemPressProps: PressProps = {};\n  if (shouldSelectOnPressUp) {\n    itemPressProps.onPressStart = (e) => {\n      modality.current = e.pointerType;\n      longPressEnabledOnPressStart.current = longPressEnabled;\n      if (e.pointerType === 'keyboard' && (!hasAction || isSelectionKey())) {\n        onSelect(e);\n      }\n    };\n\n    // If allowsDifferentPressOrigin, make selection happen on pressUp (e.g. open menu on press down, selection on menu item happens on press up.)\n    // Otherwise, have selection happen onPress (prevents listview row selection when clicking on interactable elements in the row)\n    if (!allowsDifferentPressOrigin) {\n      itemPressProps.onPress = (e) => {\n        if (hasPrimaryAction || (hasSecondaryAction && e.pointerType !== 'mouse')) {\n          if (e.pointerType === 'keyboard' && !isActionKey()) {\n            return;\n          }\n\n          performAction(e);\n        } else if (e.pointerType !== 'keyboard' && allowsSelection) {\n          onSelect(e);\n        }\n      };\n    } else {\n      itemPressProps.onPressUp = hasPrimaryAction ? null : (e) => {\n        if (e.pointerType !== 'keyboard' && allowsSelection) {\n          onSelect(e);\n        }\n      };\n\n      itemPressProps.onPress = hasPrimaryAction ? performAction : null;\n    }\n  } else {\n    itemPressProps.onPressStart = (e) => {\n      modality.current = e.pointerType;\n      longPressEnabledOnPressStart.current = longPressEnabled;\n      hadPrimaryActionOnPressStart.current = hasPrimaryAction;\n\n      // Select on mouse down unless there is a primary action which will occur on mouse up.\n      // For keyboard, select on key down. If there is an action, the Space key selects on key down,\n      // and the Enter key performs onAction on key up.\n      if (\n        allowsSelection && (\n          (e.pointerType === 'mouse' && !hasPrimaryAction) ||\n          (e.pointerType === 'keyboard' && (!allowsActions || isSelectionKey()))\n        )\n      ) {\n        onSelect(e);\n      }\n    };\n\n    itemPressProps.onPress = (e) => {\n      // Selection occurs on touch up. Primary actions always occur on pointer up.\n      // Both primary and secondary actions occur on Enter key up. The only exception\n      // is secondary actions, which occur on double click with a mouse.\n      if (\n        e.pointerType === 'touch' ||\n        e.pointerType === 'pen' ||\n        e.pointerType === 'virtual' ||\n        (e.pointerType === 'keyboard' && hasAction && isActionKey()) ||\n        (e.pointerType === 'mouse' && hadPrimaryActionOnPressStart.current)\n      ) {\n        if (hasAction) {\n          performAction(e);\n        } else if (allowsSelection) {\n          onSelect(e);\n        }\n      }\n    };\n  }\n\n  itemProps['data-key'] = key;\n  itemPressProps.preventFocusOnPress = shouldUseVirtualFocus;\n  let {pressProps, isPressed} = usePress(itemPressProps);\n\n  // Double clicking with a mouse with selectionBehavior = 'replace' performs an action.\n  let onDoubleClick = hasSecondaryAction ? (e) => {\n    if (modality.current === 'mouse') {\n      e.stopPropagation();\n      e.preventDefault();\n      performAction(e);\n    }\n  } : undefined;\n\n  // Long pressing an item with touch when selectionBehavior = 'replace' switches the selection behavior\n  // to 'toggle'. This changes the single tap behavior from performing an action (i.e. navigating) to\n  // selecting, and may toggle the appearance of a UI affordance like checkboxes on each item.\n  let {longPressProps} = useLongPress({\n    isDisabled: !longPressEnabled,\n    onLongPress(e) {\n      if (e.pointerType === 'touch') {\n        onSelect(e);\n        manager.setSelectionBehavior('toggle');\n      }\n    }\n  });\n\n  // Prevent native drag and drop on long press if we also select on long press.\n  // Once the user is in selection mode, they can long press again to drag.\n  // Use a capturing listener to ensure this runs before useDrag, regardless of\n  // the order the props get merged.\n  let onDragStartCapture = e => {\n    if (modality.current === 'touch' && longPressEnabledOnPressStart.current) {\n      e.preventDefault();\n    }\n  };\n\n  // Prevent default on link clicks so that we control exactly\n  // when they open (to match selection behavior).\n  let onClick = manager.isLink(key) ? e => {\n    if (!(openLink as any).isOpening) {\n      e.preventDefault();\n    }\n  } : undefined;\n\n  return {\n    itemProps: mergeProps(\n      itemProps,\n      allowsSelection || hasPrimaryAction ? pressProps : {},\n      longPressEnabled ? longPressProps : {},\n      {onDoubleClick, onDragStartCapture, onClick}\n    ),\n    isPressed,\n    isSelected: manager.isSelected(key),\n    isFocused: manager.isFocused && manager.focusedKey === key,\n    isDisabled,\n    allowsSelection,\n    hasAction\n  };\n}\n\nfunction isActionKey() {\n  let event = window.event as KeyboardEvent;\n  return event?.key === 'Enter';\n}\n\nfunction isSelectionKey() {\n  let event = window.event as KeyboardEvent;\n  return event?.key === ' ' || event?.code === 'Space';\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Direction, DisabledBehavior, Key, KeyboardDelegate, Node, Orientation} from '@react-types/shared';\nimport {isScrollable} from '@react-aria/utils';\nimport {RefObject} from 'react';\n\ninterface ListKeyboardDelegateOptions<T> {\n  collection: Collection<Node<T>>,\n  ref: RefObject<HTMLElement>,\n  collator?: Intl.Collator,\n  layout?: 'stack' | 'grid',\n  orientation?: Orientation,\n  direction?: Direction,\n  disabledKeys?: Set<Key>,\n  disabledBehavior?: DisabledBehavior\n}\n\nexport class ListKeyboardDelegate<T> implements KeyboardDelegate {\n  private collection: Collection<Node<T>>;\n  private disabledKeys: Set<Key>;\n  private disabledBehavior: DisabledBehavior;\n  private ref: RefObject<HTMLElement>;\n  private collator: Intl.Collator | undefined;\n  private layout: 'stack' | 'grid';\n  private orientation?: Orientation;\n  private direction?: Direction;\n\n  constructor(collection: Collection<Node<T>>, disabledKeys: Set<Key>, ref: RefObject<HTMLElement>, collator?: Intl.Collator);\n  constructor(options: ListKeyboardDelegateOptions<T>);\n  constructor(...args: any[]) {\n    if (args.length === 1) {\n      let opts = args[0] as ListKeyboardDelegateOptions<T>;\n      this.collection = opts.collection;\n      this.ref = opts.ref;\n      this.collator = opts.collator;\n      this.disabledKeys = opts.disabledKeys || new Set();\n      this.disabledBehavior = opts.disabledBehavior || 'all';\n      this.orientation = opts.orientation;\n      this.direction = opts.direction;\n      this.layout = opts.layout || 'stack';\n    } else {\n      this.collection = args[0];\n      this.disabledKeys = args[1];\n      this.ref = args[2];\n      this.collator = args[3];\n      this.layout = 'stack';\n      this.orientation = 'vertical';\n      this.disabledBehavior = 'all';\n    }\n\n    // If this is a vertical stack, remove the left/right methods completely\n    // so they aren't called by useDroppableCollection.\n    if (this.layout === 'stack' && this.orientation === 'vertical') {\n      this.getKeyLeftOf = undefined;\n      this.getKeyRightOf = undefined;\n    }\n  }\n\n  private isDisabled(item: Node<unknown>) {\n    return this.disabledBehavior === 'all' && (item.props?.isDisabled || this.disabledKeys.has(item.key));\n  }\n\n  getNextKey(key: Key) {\n    key = this.collection.getKeyAfter(key);\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.isDisabled(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return null;\n  }\n\n  getPreviousKey(key: Key) {\n    key = this.collection.getKeyBefore(key);\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.isDisabled(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n\n    return null;\n  }\n\n  private findKey(\n    key: Key,\n    nextKey: (key: Key) => Key,\n    shouldSkip: (prevRect: DOMRect, itemRect: DOMRect) => boolean\n  ) {\n    let item = this.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    // Find the item above or below in the same column.\n    let prevRect = item.getBoundingClientRect();\n    do {\n      key = nextKey(key);\n      item = this.getItem(key);\n    } while (item && shouldSkip(prevRect, item.getBoundingClientRect()));\n\n    return key;\n  }\n\n  private isSameRow(prevRect: DOMRect, itemRect: DOMRect) {\n    return prevRect.top === itemRect.top || prevRect.left !== itemRect.left;\n  }\n\n  private isSameColumn(prevRect: DOMRect, itemRect: DOMRect) {\n    return prevRect.left === itemRect.left || prevRect.top !== itemRect.top;\n  }\n\n  getKeyBelow(key: Key) {\n    if (this.layout === 'grid' && this.orientation === 'vertical') {\n      return this.findKey(key, (key) => this.getNextKey(key), this.isSameRow);\n    } else {\n      return this.getNextKey(key);\n    }\n  }\n\n  getKeyAbove(key: Key) {\n    if (this.layout === 'grid' && this.orientation === 'vertical') {\n      return this.findKey(key, (key) => this.getPreviousKey(key), this.isSameRow);\n    } else {\n      return this.getPreviousKey(key);\n    }\n  }\n\n  private getNextColumn(key: Key, right: boolean) {\n    return right ? this.getPreviousKey(key) : this.getNextKey(key);\n  }\n\n  getKeyRightOf(key: Key) {\n    if (this.layout === 'grid') {\n      if (this.orientation === 'vertical') {\n        return this.getNextColumn(key, this.direction === 'rtl');\n      } else {\n        return this.findKey(key, (key) => this.getNextColumn(key, this.direction === 'rtl'), this.isSameColumn);\n      }\n    } else if (this.orientation === 'horizontal') {\n      return this.getNextColumn(key, this.direction === 'rtl');\n    }\n\n    return null;\n  }\n\n  getKeyLeftOf(key: Key) {\n    if (this.layout === 'grid') {\n      if (this.orientation === 'vertical') {\n        return this.getNextColumn(key, this.direction === 'ltr');\n      } else {\n        return this.findKey(key, (key) => this.getNextColumn(key, this.direction === 'ltr'), this.isSameColumn);\n      }\n    } else if (this.orientation === 'horizontal') {\n      return this.getNextColumn(key, this.direction === 'ltr');\n    }\n\n    return null;\n  }\n\n  getFirstKey() {\n    let key = this.collection.getFirstKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item?.type === 'item' && !this.isDisabled(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return null;\n  }\n\n  getLastKey() {\n    let key = this.collection.getLastKey();\n    while (key != null) {\n      let item = this.collection.getItem(key);\n      if (item.type === 'item' && !this.isDisabled(item)) {\n        return key;\n      }\n\n      key = this.collection.getKeyBefore(key);\n    }\n\n    return null;\n  }\n\n  private getItem(key: Key): HTMLElement {\n    return key !== null ? this.ref.current.querySelector(`[data-key=\"${CSS.escape(key.toString())}\"]`) : null;\n  }\n\n  getKeyPageAbove(key: Key) {\n    let menu = this.ref.current;\n    let item = this.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    if (!isScrollable(menu)) {\n      return this.getFirstKey();\n    }\n\n    let containerRect = menu.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n    if (this.orientation === 'horizontal') {\n      let containerX = containerRect.x - menu.scrollLeft;\n      let pageX = Math.max(0, (itemRect.x - containerX) + itemRect.width - containerRect.width);\n\n      while (item && (itemRect.x - containerX) > pageX) {\n        key = this.getKeyAbove(key);\n        item = key == null ? null : this.getItem(key);\n        itemRect = item?.getBoundingClientRect();\n      }\n    } else {\n      let containerY = containerRect.y - menu.scrollTop;\n      let pageY = Math.max(0, (itemRect.y - containerY) + itemRect.height - containerRect.height);\n\n      while (item && (itemRect.y - containerY) > pageY) {\n        key = this.getKeyAbove(key);\n        item = key == null ? null : this.getItem(key);\n        itemRect = item?.getBoundingClientRect();\n      }\n    }\n\n    return key ?? this.getFirstKey();\n  }\n\n  getKeyPageBelow(key: Key) {\n    let menu = this.ref.current;\n    let item = this.getItem(key);\n    if (!item) {\n      return null;\n    }\n\n    if (!isScrollable(menu)) {\n      return this.getLastKey();\n    }\n\n    let containerRect = menu.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n    if (this.orientation === 'horizontal') {\n      let containerX = containerRect.x - menu.scrollLeft;\n      let pageX = Math.min(menu.scrollWidth, (itemRect.x - containerX) - itemRect.width + containerRect.width);\n\n      while (item && (itemRect.x - containerX) < pageX) {\n        key = this.getKeyBelow(key);\n        item = key == null ? null : this.getItem(key);\n        itemRect = item?.getBoundingClientRect();\n      }\n    } else {\n      let containerY = containerRect.y - menu.scrollTop;\n      let pageY = Math.min(menu.scrollHeight, (itemRect.y - containerY) - itemRect.height + containerRect.height);\n\n      while (item && (itemRect.y - containerY) < pageY) {\n        key = this.getKeyBelow(key);\n        item = key == null ? null : this.getItem(key);\n        itemRect = item?.getBoundingClientRect();\n      }\n    }\n\n    return key ?? this.getLastKey();\n  }\n\n  getKeyForSearch(search: string, fromKey?: Key) {\n    if (!this.collator) {\n      return null;\n    }\n\n    let collection = this.collection;\n    let key = fromKey || this.getFirstKey();\n    while (key != null) {\n      let item = collection.getItem(key);\n      let substring = item.textValue.slice(0, search.length);\n      if (item.textValue && this.collator.compare(substring, search) === 0) {\n        return key;\n      }\n\n      key = this.getKeyBelow(key);\n    }\n\n    return null;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaSelectableCollectionOptions, useSelectableCollection} from './useSelectableCollection';\nimport {Collection, DOMAttributes, Key, KeyboardDelegate, Node} from '@react-types/shared';\nimport {ListKeyboardDelegate} from './ListKeyboardDelegate';\nimport {useCollator} from '@react-aria/i18n';\nimport {useMemo} from 'react';\n\nexport interface AriaSelectableListOptions extends Omit<AriaSelectableCollectionOptions, 'keyboardDelegate'> {\n  /**\n   * State of the collection.\n   */\n  collection: Collection<Node<unknown>>,\n  /**\n   * A delegate object that implements behavior for keyboard focus movement.\n   */\n  keyboardDelegate?: KeyboardDelegate,\n  /**\n   * The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.\n   */\n  disabledKeys: Set<Key>\n}\n\nexport interface SelectableListAria {\n  /**\n   * Props for the option element.\n   */\n  listProps: DOMAttributes\n}\n\n/**\n * Handles interactions with a selectable list.\n */\nexport function useSelectableList(props: AriaSelectableListOptions): SelectableListAria {\n  let {\n    selectionManager,\n    collection,\n    disabledKeys,\n    ref,\n    keyboardDelegate\n  } = props;\n\n  // By default, a KeyboardDelegate is provided which uses the DOM to query layout information (e.g. for page up/page down).\n  // When virtualized, the layout object will be passed in as a prop and override this.\n  let collator = useCollator({usage: 'search', sensitivity: 'base'});\n  let disabledBehavior = selectionManager.disabledBehavior;\n  let delegate = useMemo(() => (\n    keyboardDelegate || new ListKeyboardDelegate({\n      collection,\n      disabledKeys,\n      disabledBehavior,\n      ref,\n      collator\n    })\n  ), [keyboardDelegate, collection, disabledKeys, ref, collator, disabledBehavior]);\n\n  let {collectionProps} = useSelectableCollection({\n    ...props,\n    ref,\n    selectionManager,\n    keyboardDelegate: delegate\n  });\n\n  return {\n    listProps: collectionProps\n  };\n}\n", "// src/use-menu.ts\nimport { filterDOMProps, mergeProps } from \"@react-aria/utils\";\nimport { useSelectableList } from \"@react-aria/selection\";\nvar menuData = /* @__PURE__ */ new WeakMap();\nfunction useMenu(props, state, ref) {\n  let { shouldFocusWrap = true, onKeyDown, onKeyUp, ...otherProps } = props;\n  if (!props[\"aria-label\"] && !props[\"aria-labelledby\"]) {\n    console.warn(\"An aria-label or aria-labelledby prop is required for accessibility.\");\n  }\n  let domProps = filterDOMProps(props, { labelable: true });\n  let { listProps } = useSelectableList({\n    ...otherProps,\n    ref,\n    selectionManager: state.selectionManager,\n    collection: state.collection,\n    disabledKeys: state.disabledKeys,\n    shouldFocusWrap,\n    linkBehavior: \"override\"\n  });\n  menuData.set(state, {\n    onClose: props.onClose,\n    onAction: props.onAction\n  });\n  return {\n    menuProps: mergeProps(\n      domProps,\n      { onKeyDown, onKeyUp },\n      {\n        role: \"menu\",\n        ...listProps,\n        onKeyDown: (event) => {\n          if (event.key !== \"Escape\") {\n            if (listProps.onKeyDown) {\n              listProps.onKeyDown(event);\n            }\n          }\n        }\n      }\n    )\n  };\n}\n\nexport {\n  menuData,\n  useMenu\n};\n", "import {\n  menuData\n} from \"./chunk-PH3KUROQ.mjs\";\n\n// src/use-menu-item.ts\nimport {\n  chain,\n  filterDOMProps,\n  mergeProps,\n  useLinkProps,\n  useRouter,\n  useSlotId\n} from \"@react-aria/utils\";\nimport { getItemCount } from \"@react-stately/collections\";\nimport { isFocusVisible, useFocus, useHover, useKeyboard, usePress } from \"@react-aria/interactions\";\nimport { useSelectableItem } from \"@react-aria/selection\";\nfunction useMenuItem(props, state, ref) {\n  var _a, _b;\n  let {\n    key,\n    closeOnSelect,\n    isVirtualized,\n    \"aria-haspopup\": hasPopup,\n    onPressStart: pressStartProp,\n    onPressUp: pressUpProp,\n    onPress,\n    onPressChange,\n    onPressEnd,\n    onHoverStart: hoverStartProp,\n    onHoverChange,\n    onHoverEnd,\n    onKeyDown,\n    onKeyUp,\n    onFocus,\n    onFocusChange,\n    onBlur,\n    onClick\n  } = props;\n  let isTrigger = !!hasPopup;\n  let isDisabled = (_a = props.isDisabled) != null ? _a : state.selectionManager.isDisabled(key);\n  let isSelected = (_b = props.isSelected) != null ? _b : state.selectionManager.isSelected(key);\n  let data = menuData.get(state);\n  let item = state.collection.getItem(key);\n  let onClose = props.onClose || data.onClose;\n  let router = useRouter();\n  let performAction = (e) => {\n    var _a2;\n    if (isTrigger) {\n      return;\n    }\n    if ((_a2 = item == null ? void 0 : item.props) == null ? void 0 : _a2.onAction) {\n      item.props.onAction();\n    }\n    if (props.onAction) {\n      props.onAction(key);\n    } else if (data.onAction) {\n      data.onAction(key);\n    }\n    if (e.target instanceof HTMLAnchorElement) {\n      router.open(e.target, e, item.props.href, item.props.routerOptions);\n    }\n  };\n  let role = \"menuitem\";\n  if (!isTrigger) {\n    if (state.selectionManager.selectionMode === \"single\") {\n      role = \"menuitemradio\";\n    } else if (state.selectionManager.selectionMode === \"multiple\") {\n      role = \"menuitemcheckbox\";\n    }\n  }\n  let labelId = useSlotId();\n  let descriptionId = useSlotId();\n  let keyboardId = useSlotId();\n  let ariaProps = {\n    \"aria-disabled\": isDisabled || void 0,\n    role,\n    \"aria-label\": props[\"aria-label\"],\n    \"aria-labelledby\": labelId,\n    \"aria-describedby\": [descriptionId, keyboardId].filter(Boolean).join(\" \") || void 0,\n    \"aria-controls\": props[\"aria-controls\"],\n    \"aria-haspopup\": hasPopup,\n    \"aria-expanded\": props[\"aria-expanded\"]\n  };\n  if (state.selectionManager.selectionMode !== \"none\" && !isTrigger) {\n    ariaProps[\"aria-checked\"] = isSelected;\n  }\n  if (isVirtualized) {\n    ariaProps[\"aria-posinset\"] = item == null ? void 0 : item.index;\n    ariaProps[\"aria-setsize\"] = getItemCount(state.collection);\n  }\n  let onPressStart = (e) => {\n    if (e.pointerType === \"keyboard\") {\n      performAction(e);\n    }\n    pressStartProp == null ? void 0 : pressStartProp(e);\n  };\n  let onPressUp = (e) => {\n    if (e.pointerType !== \"keyboard\") {\n      setTimeout(() => {\n        performAction(e);\n      });\n      if (!isTrigger && onClose && (closeOnSelect != null ? closeOnSelect : state.selectionManager.selectionMode !== \"multiple\" || state.selectionManager.isLink(key))) {\n        setTimeout(() => {\n          onClose == null ? void 0 : onClose();\n        });\n      }\n    }\n    pressUpProp == null ? void 0 : pressUpProp(e);\n  };\n  let { itemProps, isFocused } = useSelectableItem({\n    selectionManager: state.selectionManager,\n    key,\n    ref,\n    shouldSelectOnPressUp: true,\n    allowsDifferentPressOrigin: true,\n    linkBehavior: \"none\"\n  });\n  let { pressProps, isPressed } = usePress({\n    onPressStart,\n    onPress,\n    onPressUp,\n    onPressChange,\n    onPressEnd,\n    isDisabled\n  });\n  let { isHovered, hoverProps } = useHover({\n    isDisabled,\n    onHoverStart(e) {\n      if (!isFocusVisible()) {\n        state.selectionManager.setFocused(true);\n        state.selectionManager.setFocusedKey(key);\n      }\n      hoverStartProp == null ? void 0 : hoverStartProp(e);\n    },\n    onHoverChange,\n    onHoverEnd\n  });\n  let { keyboardProps } = useKeyboard({\n    onKeyDown: (e) => {\n      if (e.repeat) {\n        e.continuePropagation();\n        return;\n      }\n      switch (e.key) {\n        case \" \":\n          if (!isDisabled && state.selectionManager.selectionMode === \"none\" && !isTrigger && closeOnSelect !== false && onClose) {\n            onClose();\n          }\n          break;\n        case \"Enter\":\n          if (!isDisabled && closeOnSelect !== false && !isTrigger && onClose) {\n            onClose();\n          }\n          break;\n        default:\n          if (!isTrigger) {\n            e.continuePropagation();\n          }\n          onKeyDown == null ? void 0 : onKeyDown(e);\n          break;\n      }\n    },\n    onKeyUp\n  });\n  let { focusProps } = useFocus({ onBlur, onFocus, onFocusChange });\n  let domProps = filterDOMProps(item.props);\n  delete domProps.id;\n  let linkProps = useLinkProps(item.props);\n  return {\n    menuItemProps: {\n      ...ariaProps,\n      ...mergeProps(\n        domProps,\n        linkProps,\n        isTrigger ? { onFocus: itemProps.onFocus } : itemProps,\n        pressProps,\n        hoverProps,\n        keyboardProps,\n        focusProps,\n        {\n          onClick: chain(onClick, pressProps.onClick)\n        }\n      ),\n      tabIndex: itemProps.tabIndex != null ? -1 : void 0\n    },\n    labelProps: {\n      id: labelId\n    },\n    descriptionProps: {\n      id: descriptionId\n    },\n    keyboardShortcutProps: {\n      id: keyboardId\n    },\n    isHovered,\n    isFocused,\n    isSelected,\n    isPressed,\n    isDisabled\n  };\n}\n\nexport {\n  useMenuItem\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\n// We must avoid a circular dependency with @react-aria/utils, and this useLayoutEffect is\n// guarded by a check that it only runs on the client side.\n// eslint-disable-next-line rulesdir/useLayoutEffectRule\nimport React, {JSX, ReactNode, useContext, useLayoutEffect, useMemo, useRef, useState} from 'react';\n\n// To support SSR, the auto incrementing id counter is stored in a context. This allows\n// it to be reset on every request to ensure the client and server are consistent.\n// There is also a prefix string that is used to support async loading components\n// Each async boundary must be wrapped in an SSR provider, which appends to the prefix\n// and resets the current id counter. This ensures that async loaded components have\n// consistent ids regardless of the loading order.\ninterface SSRContextValue {\n  prefix: string,\n  current: number\n}\n\n// Default context value to use in case there is no SSRProvider. This is fine for\n// client-only apps. In order to support multiple copies of React Aria potentially\n// being on the page at once, the prefix is set to a random number. SSRProvider\n// will reset this to zero for consistency between server and client, so in the\n// SSR case multiple copies of React Aria is not supported.\nconst defaultContext: SSRContextValue = {\n  prefix: String(Math.round(Math.random() * 10000000000)),\n  current: 0\n};\n\nconst SSRContext = React.createContext<SSRContextValue>(defaultContext);\nconst IsSSRContext = React.createContext(false);\n\nexport interface SSRProviderProps {\n  /** Your application here. */\n  children: ReactNode\n}\n\n// This is only used in React < 18.\nfunction LegacySSRProvider(props: SSRProviderProps): JSX.Element {\n  let cur = useContext(SSRContext);\n  let counter = useCounter(cur === defaultContext);\n  let [isSSR, setIsSSR] = useState(true);\n  let value: SSRContextValue = useMemo(() => ({\n    // If this is the first SSRProvider, start with an empty string prefix, otherwise\n    // append and increment the counter.\n    prefix: cur === defaultContext ? '' : `${cur.prefix}-${counter}`,\n    current: 0\n  }), [cur, counter]);\n\n  // If on the client, and the component was initially server rendered,\n  // then schedule a layout effect to update the component after hydration.\n  if (typeof document !== 'undefined') {\n    // This if statement technically breaks the rules of hooks, but is safe\n    // because the condition never changes after mounting.\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useLayoutEffect(() => {\n      setIsSSR(false);\n    }, []);\n  }\n\n  return (\n    <SSRContext.Provider value={value}>\n      <IsSSRContext.Provider value={isSSR}>\n        {props.children}\n      </IsSSRContext.Provider>\n    </SSRContext.Provider>\n  );\n}\n\nlet warnedAboutSSRProvider = false;\n\n/**\n * When using SSR with React Aria in React 16 or 17, applications must be wrapped in an SSRProvider.\n * This ensures that auto generated ids are consistent between the client and server.\n */\nexport function SSRProvider(props: SSRProviderProps): JSX.Element {\n  if (typeof React['useId'] === 'function') {\n    if (process.env.NODE_ENV !== 'test' && !warnedAboutSSRProvider) {\n      console.warn('In React 18, SSRProvider is not necessary and is a noop. You can remove it from your app.');\n      warnedAboutSSRProvider = true;\n    }\n    return <>{props.children}</>;\n  }\n  return <LegacySSRProvider {...props} />;\n}\n\nlet canUseDOM = Boolean(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nlet componentIds = new WeakMap();\n\nfunction useCounter(isDisabled = false) {\n  let ctx = useContext(SSRContext);\n  let ref = useRef<number | null>(null);\n  // eslint-disable-next-line rulesdir/pure-render\n  if (ref.current === null && !isDisabled) {\n    // In strict mode, React renders components twice, and the ref will be reset to null on the second render.\n    // This means our id counter will be incremented twice instead of once. This is a problem because on the\n    // server, components are only rendered once and so ids generated on the server won't match the client.\n    // In React 18, useId was introduced to solve this, but it is not available in older versions. So to solve this\n    // we need to use some React internals to access the underlying Fiber instance, which is stable between renders.\n    // This is exposed as ReactCurrentOwner in development, which is all we need since StrictMode only runs in development.\n    // To ensure that we only increment the global counter once, we store the starting id for this component in\n    // a weak map associated with the Fiber. On the second render, we reset the global counter to this value.\n    // Since React runs the second render immediately after the first, this is safe.\n    // @ts-ignore\n    let currentOwner = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED?.ReactCurrentOwner?.current;\n    if (currentOwner) {\n      let prevComponentValue = componentIds.get(currentOwner);\n      if (prevComponentValue == null) {\n        // On the first render, and first call to useId, store the id and state in our weak map.\n        componentIds.set(currentOwner, {\n          id: ctx.current,\n          state: currentOwner.memoizedState\n        });\n      } else if (currentOwner.memoizedState !== prevComponentValue.state) {\n        // On the second render, the memoizedState gets reset by React.\n        // Reset the counter, and remove from the weak map so we don't\n        // do this for subsequent useId calls.\n        ctx.current = prevComponentValue.id;\n        componentIds.delete(currentOwner);\n      }\n    }\n\n    // eslint-disable-next-line rulesdir/pure-render\n    ref.current = ++ctx.current;\n  }\n\n  // eslint-disable-next-line rulesdir/pure-render\n  return ref.current;\n}\n\nfunction useLegacySSRSafeId(defaultId?: string): string {\n  let ctx = useContext(SSRContext);\n\n  // If we are rendering in a non-DOM environment, and there's no SSRProvider,\n  // provide a warning to hint to the developer to add one.\n  if (ctx === defaultContext && !canUseDOM) {\n    console.warn('When server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.');\n  }\n\n  let counter = useCounter(!!defaultId);\n  let prefix = ctx === defaultContext && process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${ctx.prefix}`;\n  return defaultId || `${prefix}-${counter}`;\n}\n\nfunction useModernSSRSafeId(defaultId?: string): string {\n  // @ts-ignore\n  let id = React.useId();\n  let [didSSR] = useState(useIsSSR());\n  let prefix = didSSR || process.env.NODE_ENV === 'test' ? 'react-aria' : `react-aria${defaultContext.prefix}`;\n  return defaultId || `${prefix}-${id}`;\n}\n\n// Use React.useId in React 18 if available, otherwise fall back to our old implementation.\n/** @private */\nexport const useSSRSafeId = typeof React['useId'] === 'function' ? useModernSSRSafeId : useLegacySSRSafeId;\n\nfunction getSnapshot() {\n  return false;\n}\n\nfunction getServerSnapshot() {\n  return true;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction subscribe(onStoreChange: () => void): () => void {\n  // noop\n  return () => {};\n}\n\n/**\n * Returns whether the component is currently being server side rendered or\n * hydrated on the client. Can be used to delay browser-specific rendering\n * until after hydration.\n */\nexport function useIsSSR(): boolean {\n  // In React 18, we can use useSyncExternalStore to detect if we're server rendering or hydrating.\n  if (typeof React['useSyncExternalStore'] === 'function') {\n    return React['useSyncExternalStore'](subscribe, getSnapshot, getServerSnapshot);\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return useContext(IsSSRContext);\n}\n", "// src/index.ts\nimport { useIsSSR } from \"@react-aria/ssr\";\nvar MOBILE_SCREEN_WIDTH = 700;\nfunction useIsMobile() {\n  let isSSR = useIsSSR();\n  if (isSSR || typeof window === \"undefined\") {\n    return false;\n  }\n  return window.screen.width <= MOBILE_SCREEN_WIDTH;\n}\nexport {\n  useIsMobile\n};\n", "\"use client\";\nimport {\n  MenuSelectedIcon\n} from \"./chunk-7C7K3AST.mjs\";\nimport {\n  useMenuItem\n} from \"./chunk-BQCSFB47.mjs\";\n\n// src/menu-item.tsx\nimport { useMemo } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar MenuItem = forwardRef((props, _) => {\n  const {\n    Component,\n    slots,\n    classNames,\n    rendered,\n    shortcut,\n    description,\n    isSelectable,\n    isSelected,\n    isDisabled,\n    selectedIcon,\n    startContent,\n    endContent,\n    disableAnimation,\n    hideSelectedIcon,\n    getItemProps,\n    getLabelProps,\n    getDescriptionProps,\n    getKeyboardShortcutProps,\n    getSelectedIconProps\n  } = useMenuItem(props);\n  const selectedContent = useMemo(() => {\n    const defaultIcon = /* @__PURE__ */ jsx(MenuSelectedIcon, { disableAnimation, isSelected });\n    if (typeof selectedIcon === \"function\") {\n      return selectedIcon({ icon: defaultIcon, isSelected, isDisabled });\n    }\n    if (selectedIcon)\n      return selectedIcon;\n    return defaultIcon;\n  }, [selectedIcon, isSelected, isDisabled, disableAnimation]);\n  return /* @__PURE__ */ jsxs(Component, { ...getItemProps(), children: [\n    startContent,\n    description ? /* @__PURE__ */ jsxs(\"div\", { className: slots.wrapper({ class: classNames == null ? void 0 : classNames.wrapper }), children: [\n      /* @__PURE__ */ jsx(\"span\", { ...getLabelProps(), children: rendered }),\n      /* @__PURE__ */ jsx(\"span\", { ...getDescriptionProps(), children: description })\n    ] }) : /* @__PURE__ */ jsx(\"span\", { ...getLabelProps(), children: rendered }),\n    shortcut && /* @__PURE__ */ jsx(\"kbd\", { ...getKeyboardShortcutProps(), children: shortcut }),\n    isSelectable && !hideSelectedIcon && /* @__PURE__ */ jsx(\"span\", { ...getSelectedIconProps(), children: selectedContent }),\n    endContent\n  ] });\n});\nMenuItem.displayName = \"NextUI.MenuItem\";\nvar menu_item_default = MenuItem;\n\nexport {\n  menu_item_default\n};\n", "{\n  \"longPressMessage\": \"اضغط مطولاً أو اضغط على Alt + السهم لأسفل لفتح القائمة\"\n}\n", "{\n  \"longPressMessage\": \"Натиснете продължително или натиснете Alt+ стрелка надолу, за да отворите менюто\"\n}\n", "{\n  \"longPressMessage\": \"Dlouhým stiskem nebo stisknutím kláves Alt + šipka dolů otevřete nabídku\"\n}\n", "{\n  \"longPressMessage\": \"Langt tryk eller tryk på Alt + pil ned for at åbne menuen\"\n}\n", "{\n  \"longPressMessage\": \"Drücken Sie lange oder drücken Sie Alt + Nach-unten, um das Menü zu öffnen\"\n}\n", "{\n  \"longPressMessage\": \"Πιέστε παρατεταμένα ή πατήστε Alt + κάτω βέλος για να ανοίξετε το μενού\"\n}\n", "{\n  \"longPressMessage\": \"Long press or press Alt + ArrowDown to open menu\"\n}\n", "{\n  \"longPressMessage\": \"Mantenga pulsado o pulse Alt + flecha abajo para abrir el menú\"\n}\n", "{\n  \"longPressMessage\": \"Menüü avamiseks vajutage pikalt või vajutage klahve Alt + allanool\"\n}\n", "{\n  \"longPressMessage\": \"Avaa valikko painamalla pohjassa tai näppäinyhdistelmällä Alt + Alanuoli\"\n}\n", "{\n  \"longPressMessage\": \"Appuyez de manière prolongée ou appuyez sur Alt + Flèche vers le bas pour ouvrir le menu.\"\n}\n", "{\n  \"longPressMessage\": \"לחץ לחיצה ארוכה או הקש Alt + ArrowDown כדי לפתוח את התפריט\"\n}\n", "{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dolje za otvaranje izbornika\"\n}\n", "{\n  \"longPressMessage\": \"Nyomja meg hosszan, vagy nyomja meg az Alt + lefele nyíl gombot a menü megnyitásához\"\n}\n", "{\n  \"longPressMessage\": \"Premere a lungo o premere Alt + Freccia giù per aprire il menu\"\n}\n", "{\n  \"longPressMessage\": \"長押しまたは Alt+下矢印キーでメニューを開く\"\n}\n", "{\n  \"longPressMessage\": \"길게 누르거나 Alt + 아래쪽 화살표를 눌러 메뉴 열기\"\n}\n", "{\n  \"longPressMessage\": \"Norėdami atidaryti meniu, nuspaudę palaikykite arba paspauskite „Alt + ArrowDown“.\"\n}\n", "{\n  \"longPressMessage\": \"Lai atvērtu izvēlni, turiet nospiestu vai nospiediet taustiņu kombināciju Alt + lejupvērstā bultiņa\"\n}\n", "{\n  \"longPressMessage\": \"Langt trykk eller trykk Alt + PilNed for å åpne menyen\"\n}\n", "{\n  \"longPressMessage\": \"Druk lang op Alt + pijl-omlaag of druk op Alt om het menu te openen\"\n}\n", "{\n  \"longPressMessage\": \"Naciśnij i przytrzymaj lub naciśnij klawisze Alt + Strzałka w dół, aby otworzyć menu\"\n}\n", "{\n  \"longPressMessage\": \"Pressione e segure ou pressione Alt + Seta para baixo para abrir o menu\"\n}\n", "{\n  \"longPressMessage\": \"Prima continuamente ou prima Alt + Seta Para Baixo para abrir o menu\"\n}\n", "{\n  \"longPressMessage\": \"Apăsați lung sau apăsați pe Alt + săgeată în jos pentru a deschide meniul\"\n}\n", "{\n  \"longPressMessage\": \"Нажмите и удерживайте или нажмите Alt + Стрелка вниз, чтобы открыть меню\"\n}\n", "{\n  \"longPressMessage\": \"Ponuku otvoríte dlhým stlačením alebo stlačením klávesu Alt + klávesu so šípkou nadol\"\n}\n", "{\n  \"longPressMessage\": \"Za odprtje menija pritisnite in držite gumb ali pritisnite Alt+puščica navzdol\"\n}\n", "{\n  \"longPressMessage\": \"Dugo pritisnite ili pritisnite Alt + strelicu prema dole da otvorite meni\"\n}\n", "{\n  \"longPressMessage\": \"Håll nedtryckt eller tryck på Alt + pil nedåt för att öppna menyn\"\n}\n", "{\n  \"longPressMessage\": \"Menüyü açmak için uzun basın veya Alt + Aşağı Ok tuşuna basın\"\n}\n", "{\n  \"longPressMessage\": \"Довго або звичайно натисніть комбінацію клавіш Alt і стрілка вниз, щоб відкрити меню\"\n}\n", "{\n  \"longPressMessage\": \"长按或按 Alt + 向下方向键以打开菜单\"\n}\n", "{\n  \"longPressMessage\": \"長按或按 Alt+向下鍵以開啟功能表\"\n}\n", "const _temp0 = require(\"../intl/ar-AE.json\");\nconst _temp1 = require(\"../intl/bg-BG.json\");\nconst _temp2 = require(\"../intl/cs-CZ.json\");\nconst _temp3 = require(\"../intl/da-DK.json\");\nconst _temp4 = require(\"../intl/de-DE.json\");\nconst _temp5 = require(\"../intl/el-GR.json\");\nconst _temp6 = require(\"../intl/en-US.json\");\nconst _temp7 = require(\"../intl/es-ES.json\");\nconst _temp8 = require(\"../intl/et-EE.json\");\nconst _temp9 = require(\"../intl/fi-FI.json\");\nconst _temp10 = require(\"../intl/fr-FR.json\");\nconst _temp11 = require(\"../intl/he-IL.json\");\nconst _temp12 = require(\"../intl/hr-HR.json\");\nconst _temp13 = require(\"../intl/hu-HU.json\");\nconst _temp14 = require(\"../intl/it-IT.json\");\nconst _temp15 = require(\"../intl/ja-JP.json\");\nconst _temp16 = require(\"../intl/ko-KR.json\");\nconst _temp17 = require(\"../intl/lt-LT.json\");\nconst _temp18 = require(\"../intl/lv-LV.json\");\nconst _temp19 = require(\"../intl/nb-NO.json\");\nconst _temp20 = require(\"../intl/nl-NL.json\");\nconst _temp21 = require(\"../intl/pl-PL.json\");\nconst _temp22 = require(\"../intl/pt-BR.json\");\nconst _temp23 = require(\"../intl/pt-PT.json\");\nconst _temp24 = require(\"../intl/ro-RO.json\");\nconst _temp25 = require(\"../intl/ru-RU.json\");\nconst _temp26 = require(\"../intl/sk-SK.json\");\nconst _temp27 = require(\"../intl/sl-SI.json\");\nconst _temp28 = require(\"../intl/sr-SP.json\");\nconst _temp29 = require(\"../intl/sv-SE.json\");\nconst _temp30 = require(\"../intl/tr-TR.json\");\nconst _temp31 = require(\"../intl/uk-UA.json\");\nconst _temp32 = require(\"../intl/zh-CN.json\");\nconst _temp33 = require(\"../intl/zh-TW.json\");\nmodule.exports = {\n  \"ar-AE\": _temp0,\n  \"bg-BG\": _temp1,\n  \"cs-CZ\": _temp2,\n  \"da-DK\": _temp3,\n  \"de-DE\": _temp4,\n  \"el-GR\": _temp5,\n  \"en-US\": _temp6,\n  \"es-ES\": _temp7,\n  \"et-EE\": _temp8,\n  \"fi-FI\": _temp9,\n  \"fr-FR\": _temp10,\n  \"he-IL\": _temp11,\n  \"hr-HR\": _temp12,\n  \"hu-HU\": _temp13,\n  \"it-IT\": _temp14,\n  \"ja-JP\": _temp15,\n  \"ko-KR\": _temp16,\n  \"lt-LT\": _temp17,\n  \"lv-LV\": _temp18,\n  \"nb-NO\": _temp19,\n  \"nl-NL\": _temp20,\n  \"pl-PL\": _temp21,\n  \"pt-BR\": _temp22,\n  \"pt-PT\": _temp23,\n  \"ro-RO\": _temp24,\n  \"ru-RU\": _temp25,\n  \"sk-SK\": _temp26,\n  \"sl-SI\": _temp27,\n  \"sr-SP\": _temp28,\n  \"sv-SE\": _temp29,\n  \"tr-TR\": _temp30,\n  \"uk-UA\": _temp31,\n  \"zh-CN\": _temp32,\n  \"zh-TW\": _temp33\n}", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {AriaButtonProps} from '@react-types/button';\nimport {AriaMenuOptions} from './useMenu';\n// @ts-ignore\nimport intlMessages from '../intl/*.json';\nimport {MenuTriggerState} from '@react-stately/menu';\nimport {MenuTriggerType} from '@react-types/menu';\nimport {RefObject} from 'react';\nimport {useId} from '@react-aria/utils';\nimport {useLocalizedStringFormatter} from '@react-aria/i18n';\nimport {useLongPress} from '@react-aria/interactions';\nimport {useOverlayTrigger} from '@react-aria/overlays';\n\nexport interface AriaMenuTriggerProps {\n  /** The type of menu that the menu trigger opens. */\n  type?: 'menu' | 'listbox',\n  /** Whether menu trigger is disabled. */\n  isDisabled?: boolean,\n  /** How menu is triggered. */\n  trigger?: MenuTriggerType\n}\n\nexport interface MenuTriggerAria<T> {\n  /** Props for the menu trigger element. */\n  menuTriggerProps: AriaButtonProps,\n\n  /** Props for the menu. */\n  menuProps: AriaMenuOptions<T>\n}\n\n/**\n * Provides the behavior and accessibility implementation for a menu trigger.\n * @param props - Props for the menu trigger.\n * @param state - State for the menu trigger.\n * @param ref - Ref to the HTML element trigger for the menu.\n */\nexport function useMenuTrigger<T>(props: AriaMenuTriggerProps, state: MenuTriggerState, ref: RefObject<Element>): MenuTriggerAria<T> {\n  let {\n    type = 'menu' as AriaMenuTriggerProps['type'],\n    isDisabled,\n    trigger = 'press'\n  } = props;\n\n  let menuTriggerId = useId();\n  let {triggerProps, overlayProps} = useOverlayTrigger({type}, state, ref);\n\n  let onKeyDown = (e) => {\n    if (isDisabled) {\n      return;\n    }\n\n    if (trigger === 'longPress' && !e.altKey) {\n      return;\n    }\n\n    if (ref && ref.current) {\n      switch (e.key) {\n        case 'Enter':\n        case ' ':\n          if (trigger === 'longPress') {\n            return;\n          }\n          // fallthrough\n        case 'ArrowDown':\n          // Stop propagation, unless it would already be handled by useKeyboard.\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('first');\n          break;\n        case 'ArrowUp':\n          if (!('continuePropagation' in e)) {\n            e.stopPropagation();\n          }\n          e.preventDefault();\n          state.toggle('last');\n          break;\n        default:\n          // Allow other keys.\n          if ('continuePropagation' in e) {\n            e.continuePropagation();\n          }\n      }\n    }\n  };\n\n  let stringFormatter = useLocalizedStringFormatter(intlMessages, '@react-aria/menu');\n  let {longPressProps} = useLongPress({\n    isDisabled: isDisabled || trigger !== 'longPress',\n    accessibilityDescription: stringFormatter.format('longPressMessage'),\n    onLongPressStart() {\n      state.close();\n    },\n    onLongPress() {\n      state.open('first');\n    }\n  });\n\n  let pressProps =  {\n    onPressStart(e) {\n      // For consistency with native, open the menu on mouse/key down, but touch up.\n      if (e.pointerType !== 'touch' && e.pointerType !== 'keyboard' && !isDisabled) {\n        // If opened with a screen reader, auto focus the first item.\n        // Otherwise, the menu itself will be focused.\n        state.open(e.pointerType === 'virtual' ? 'first' : null);\n      }\n    },\n    onPress(e) {\n      if (e.pointerType === 'touch' && !isDisabled) {\n        state.toggle();\n      }\n    }\n  };\n\n  // omit onPress from triggerProps since we override it above.\n  delete triggerProps.onPress;\n\n  return {\n    menuTriggerProps: {\n      ...triggerProps,\n      ...(trigger === 'press' ? pressProps : longPressProps),\n      id: menuTriggerId,\n      onKeyDown\n    },\n    menuProps: {\n      ...overlayProps,\n      'aria-labelledby': menuTriggerId,\n      autoFocus: state.focusStrategy || true,\n      onClose: state.close\n    }\n  };\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DOMAttributes} from '@react-types/shared';\nimport {ReactNode} from 'react';\nimport {useId} from '@react-aria/utils';\n\nexport interface AriaMenuSectionProps {\n  /** The heading for the section. */\n  heading?: ReactNode,\n  /** An accessibility label for the section. Required if `heading` is not present. */\n  'aria-label'?: string\n}\n\nexport interface MenuSectionAria {\n  /** Props for the wrapper list item. */\n  itemProps: DOMAttributes,\n\n  /** Props for the heading element, if any. */\n  headingProps: DOMAttributes,\n\n  /** Props for the group element. */\n  groupProps: DOMAttributes\n}\n\n/**\n * Provides the behavior and accessibility implementation for a section in a menu.\n * See `useMenu` for more details about menus.\n * @param props - Props for the section.\n */\nexport function useMenuSection(props: AriaMenuSectionProps): MenuSectionAria {\n  let {heading, 'aria-label': ariaLabel} = props;\n  let headingId = useId();\n\n  return {\n    itemProps: {\n      role: 'presentation'\n    },\n    headingProps: heading ? {\n      // Techincally, menus cannot contain headings according to ARIA.\n      // We hide the heading from assistive technology, using role=\"presentation\",\n      // and only use it as a label for the nested group.\n      id: headingId,\n      role: 'presentation'\n    } : {},\n    groupProps: {\n      role: 'group',\n      'aria-label': ariaLabel,\n      'aria-labelledby': heading ? headingId : undefined\n    }\n  };\n}\n", "import {RefObject, useEffect, useRef, useState} from 'react';\nimport {useInteractionModality} from '@react-aria/interactions';\nimport {useResizeObserver} from '@react-aria/utils';\n\ninterface SafelyMouseToSubmenuOptions {\n  /** Ref for the parent menu. */\n  menuRef: RefObject<Element>,\n  /** Ref for the submenu. */\n  submenuRef: RefObject<Element>,\n  /** Whether the submenu is open. */\n  isOpen: boolean,\n  /** Whether this feature is disabled. */\n  isDisabled?: boolean\n}\n\nconst ALLOWED_INVALID_MOVEMENTS = 2;\nconst THROTTLE_TIME = 50;\nconst TIMEOUT_TIME = 1000;\nconst ANGLE_PADDING = Math.PI / 12; // 15°\n\n/**\n * Allows the user to move their pointer to the submenu without it closing when their mouse leaves the trigger element.\n * Prevents pointer events from going to the underlying menu if the user is moving their pointer towards the sub-menu.\n */\nexport function useSafelyMouseToSubmenu(options: SafelyMouseToSubmenuOptions) {\n  let {menuRef, submenuRef, isOpen, isDisabled} = options;\n  let prevPointerPos = useRef<{x: number, y: number} | undefined>();\n  let submenuRect = useRef<DOMRect | undefined>();\n  let lastProcessedTime = useRef<number>(0);\n  let timeout = useRef<ReturnType<typeof setTimeout> | undefined>();\n  let autoCloseTimeout = useRef<ReturnType<typeof setTimeout> | undefined>();\n  let submenuSide = useRef<'left' | 'right' | undefined>();\n  let movementsTowardsSubmenuCount = useRef<number>(2);\n  let [preventPointerEvents, setPreventPointerEvents] = useState(false);\n\n  let updateSubmenuRect = () => {\n    if (submenuRef.current) {\n      submenuRect.current = submenuRef.current.getBoundingClientRect();\n      submenuSide.current = undefined;\n    }\n  };\n  useResizeObserver({ref: submenuRef, onResize: updateSubmenuRect});\n\n  let reset = () => {\n    setPreventPointerEvents(false);\n    movementsTowardsSubmenuCount.current = ALLOWED_INVALID_MOVEMENTS;\n    prevPointerPos.current = undefined;\n  };\n\n  let modality = useInteractionModality();\n\n  useEffect(() => {\n    if (preventPointerEvents && menuRef.current) {\n      (menuRef.current as HTMLElement).style.pointerEvents = 'none';\n    } else {\n      (menuRef.current as HTMLElement).style.pointerEvents = '';\n    }\n  }, [menuRef, preventPointerEvents]);\n\n  useEffect(() => {\n    let submenu = submenuRef.current;\n    let menu = menuRef.current;\n\n    if (isDisabled || !submenu || !isOpen || modality !== 'pointer') {\n      reset();\n      return;\n    }\n    submenuRect.current = submenu.getBoundingClientRect();\n\n    let onPointerMove = (e: PointerEvent) => {\n      if (e.pointerType === 'touch' || e.pointerType === 'pen') {\n        return;\n      }\n\n      let currentTime = Date.now();\n\n      // Throttle\n      if (currentTime - lastProcessedTime.current < THROTTLE_TIME) {\n        return;\n      }\n      clearTimeout(timeout.current);\n      clearTimeout(autoCloseTimeout.current);\n\n      let {clientX: mouseX, clientY: mouseY} = e;\n\n      if (!prevPointerPos.current) {\n        prevPointerPos.current = {x: mouseX, y: mouseY};\n        return;\n      }\n\n      if (!submenuRect.current) {\n        return;\n      }\n\n      if (!submenuSide.current) {\n        submenuSide.current = mouseX > submenuRect.current.right ? 'left' : 'right';\n      }\n\n      // Pointer is outside of parent menu\n      if (mouseX < menu.getBoundingClientRect().left || mouseX > menu.getBoundingClientRect().right || mouseY < menu.getBoundingClientRect().top || mouseY > menu.getBoundingClientRect().bottom) {\n        reset();\n        return;\n      }\n\n      /* Check if pointer is moving towards submenu.\n        Uses the 2-argument arctangent (https://en.wikipedia.org/wiki/Atan2) to calculate:\n          - angle between previous pointer and top of submenu\n          - angle between previous pointer and bottom of submenu\n          - angle between previous pointer and current pointer (delta)\n        If the pointer delta angle value is between the top and bottom angle values, we know the pointer is moving towards the submenu.\n      */\n      let prevMouseX = prevPointerPos.current.x;\n      let prevMouseY = prevPointerPos.current.y;\n      let toSubmenuX = submenuSide.current === 'right' ? submenuRect.current.left - prevMouseX : prevMouseX - submenuRect.current.right;\n      let angleTop = Math.atan2(prevMouseY - submenuRect.current.top, toSubmenuX) + ANGLE_PADDING;\n      let angleBottom = Math.atan2(prevMouseY - submenuRect.current.bottom, toSubmenuX) - ANGLE_PADDING;\n      let anglePointer = Math.atan2(prevMouseY - mouseY, (submenuSide.current === 'left' ? -(mouseX - prevMouseX) : mouseX - prevMouseX));\n      let isMovingTowardsSubmenu = anglePointer < angleTop && anglePointer > angleBottom;\n\n      movementsTowardsSubmenuCount.current = isMovingTowardsSubmenu ?\n        Math.min(movementsTowardsSubmenuCount.current + 1, ALLOWED_INVALID_MOVEMENTS) :\n        Math.max(movementsTowardsSubmenuCount.current - 1, 0);\n\n      if (movementsTowardsSubmenuCount.current >= ALLOWED_INVALID_MOVEMENTS) {\n        setPreventPointerEvents(true);\n      } else {\n        setPreventPointerEvents(false);\n      }\n\n      lastProcessedTime.current = currentTime;\n      prevPointerPos.current = {x: mouseX, y: mouseY};\n\n      // If the pointer is moving towards the submenu, start a timeout to close if no other movements are made after 500ms.\n      if (isMovingTowardsSubmenu) {\n        timeout.current = setTimeout(() => {\n          reset();\n          autoCloseTimeout.current = setTimeout(() => {\n            // Fire a pointerover event to trigger the menu to close.\n            // Wait until pointer-events:none is no longer applied\n            let target = document.elementFromPoint(mouseX, mouseY);\n            if (target && menu.contains(target)) {\n              target.dispatchEvent(new PointerEvent('pointerover', {bubbles: true, cancelable: true}));\n            }\n          }, 100);\n        }, TIMEOUT_TIME);\n      }\n    };\n\n    window.addEventListener('pointermove', onPointerMove);\n\n    return () => {\n      window.removeEventListener('pointermove', onPointerMove);\n      clearTimeout(timeout.current);\n      clearTimeout(autoCloseTimeout.current);\n      movementsTowardsSubmenuCount.current = ALLOWED_INVALID_MOVEMENTS;\n    };\n\n  }, [isDisabled, isOpen, menuRef, modality, setPreventPointerEvents, submenuRef]);\n}\n", "\"use client\";\nimport {\n  menu_item_default\n} from \"./chunk-CQ43W3AP.mjs\";\n\n// src/menu-section.tsx\nimport { menuSection } from \"@nextui-org/theme\";\nimport { useMenuSection } from \"@react-aria/menu\";\nimport { useMemo } from \"react\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { mergeProps } from \"@react-aria/utils\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { Divider } from \"@nextui-org/divider\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar MenuSection = forwardRef(\n  ({\n    item,\n    state,\n    as,\n    variant,\n    color,\n    disableAnimation,\n    onAction,\n    closeOnSelect,\n    className,\n    classNames,\n    showDivider = false,\n    hideSelectedIcon,\n    dividerProps = {},\n    itemClasses,\n    title,\n    ...otherProps\n  }, _) => {\n    const Component = as || \"li\";\n    const slots = useMemo(() => menuSection(), []);\n    const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n    const dividerStyles = clsx(classNames == null ? void 0 : classNames.divider, dividerProps == null ? void 0 : dividerProps.className);\n    const { itemProps, headingProps, groupProps } = useMenuSection({\n      heading: item.rendered,\n      \"aria-label\": item[\"aria-label\"]\n    });\n    return /* @__PURE__ */ jsxs(\n      Component,\n      {\n        \"data-slot\": \"base\",\n        ...mergeProps(itemProps, otherProps),\n        className: slots.base({ class: baseStyles }),\n        children: [\n          item.rendered && /* @__PURE__ */ jsx(\n            \"span\",\n            {\n              ...headingProps,\n              className: slots.heading({ class: classNames == null ? void 0 : classNames.heading }),\n              \"data-slot\": \"heading\",\n              children: item.rendered\n            }\n          ),\n          /* @__PURE__ */ jsxs(\n            \"ul\",\n            {\n              ...groupProps,\n              className: slots.group({ class: classNames == null ? void 0 : classNames.group }),\n              \"data-has-title\": !!item.rendered,\n              \"data-slot\": \"group\",\n              children: [\n                [...item.childNodes].map((node) => {\n                  const { key: nodeKey, props: nodeProps } = node;\n                  let menuItem = /* @__PURE__ */ jsx(\n                    menu_item_default,\n                    {\n                      classNames: itemClasses,\n                      closeOnSelect,\n                      color,\n                      disableAnimation,\n                      hideSelectedIcon,\n                      item: node,\n                      state,\n                      variant,\n                      onAction,\n                      ...nodeProps\n                    },\n                    nodeKey\n                  );\n                  if (node.wrapper) {\n                    menuItem = node.wrapper(menuItem);\n                  }\n                  return menuItem;\n                }),\n                showDivider && /* @__PURE__ */ jsx(\n                  Divider,\n                  {\n                    as: \"li\",\n                    className: slots.divider({\n                      class: dividerStyles\n                    }),\n                    ...dividerProps\n                  }\n                )\n              ]\n            }\n          )\n        ]\n      }\n    );\n  }\n);\nMenuSection.displayName = \"NextUI.MenuSection\";\nvar menu_section_default = MenuSection;\n\nexport {\n  menu_section_default\n};\n", "// src/use-separator.ts\nimport { filterDOMProps } from \"@nextui-org/react-rsc-utils\";\nfunction useSeparator(props) {\n  let domProps = filterDOMProps(props, {\n    enabled: typeof props.elementType === \"string\"\n  });\n  let ariaOrientation;\n  if (props.orientation === \"vertical\") {\n    ariaOrientation = \"vertical\";\n  }\n  if (props.elementType !== \"hr\") {\n    return {\n      separatorProps: {\n        ...domProps,\n        role: \"separator\",\n        \"aria-orientation\": ariaOrientation\n      }\n    };\n  }\n  return { separatorProps: domProps };\n}\n\nexport {\n  useSeparator\n};\n", "import {\n  useSeparator\n} from \"./chunk-LVTFMK47.mjs\";\n\n// src/use-divider.ts\nimport { divider } from \"@nextui-org/theme\";\nimport { useCallback, useMemo } from \"react\";\nfunction useDivider(props) {\n  const { as, className, orientation, ...otherProps } = props;\n  let Component = as || \"hr\";\n  if (Component === \"hr\" && orientation === \"vertical\") {\n    Component = \"div\";\n  }\n  const { separatorProps } = useSeparator({\n    elementType: typeof Component === \"string\" ? Component : \"hr\",\n    orientation\n  });\n  const styles = useMemo(\n    () => divider({\n      orientation,\n      className\n    }),\n    [orientation, className]\n  );\n  const getDividerProps = useCallback(\n    (props2 = {}) => ({\n      className: styles,\n      role: \"separator\",\n      \"data-orientation\": orientation,\n      ...separatorProps,\n      ...otherProps,\n      ...props2\n    }),\n    [styles, orientation, separatorProps, otherProps]\n  );\n  return { Component, getDividerProps };\n}\n\nexport {\n  useDivider\n};\n", "import {\n  useDivider\n} from \"./chunk-HGQPAK7A.mjs\";\n\n// src/divider.tsx\nimport { forwardRef } from \"@nextui-org/system-rsc\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Divider = forwardRef((props, ref) => {\n  const { Component, getDividerProps } = useDivider({ ...props });\n  return /* @__PURE__ */ jsx(Component, { ref, ...getDividerProps() });\n});\nDivider.displayName = \"NextUI.Divider\";\nvar divider_default = Divider;\n\nexport {\n  divider_default\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, Key, Node} from '@react-types/shared';\n\nexport class TreeCollection<T> implements Collection<Node<T>> {\n  private keyMap: Map<Key, Node<T>> = new Map();\n  private iterable: Iterable<Node<T>>;\n  private firstKey: Key;\n  private lastKey: Key;\n\n  constructor(nodes: Iterable<Node<T>>, {expandedKeys}: {expandedKeys?: Set<Key>} = {}) {\n    this.iterable = nodes;\n    expandedKeys = expandedKeys || new Set();\n\n    let visit = (node: Node<T>) => {\n      this.keyMap.set(node.key, node);\n\n      if (node.childNodes && (node.type === 'section' || expandedKeys.has(node.key))) {\n        for (let child of node.childNodes) {\n          visit(child);\n        }\n      }\n    };\n\n    for (let node of nodes) {\n      visit(node);\n    }\n\n    let last: Node<T>;\n    let index = 0;\n    for (let [key, node] of this.keyMap) {\n      if (last) {\n        last.nextKey = key;\n        node.prevKey = last.key;\n      } else {\n        this.firstKey = key;\n        node.prevKey = undefined;\n      }\n\n      if (node.type === 'item') {\n        node.index = index++;\n      }\n\n      last = node;\n\n      // Set nextKey as undefined since this might be the last node\n      // If it isn't the last node, last.nextKey will properly set at start of new loop\n      last.nextKey = undefined;\n    }\n\n    this.lastKey = last?.key;\n  }\n\n  *[Symbol.iterator]() {\n    yield* this.iterable;\n  }\n\n  get size() {\n    return this.keyMap.size;\n  }\n\n  getKeys() {\n    return this.keyMap.keys();\n  }\n\n  getKeyBefore(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.prevKey : null;\n  }\n\n  getKeyAfter(key: Key) {\n    let node = this.keyMap.get(key);\n    return node ? node.nextKey : null;\n  }\n\n  getFirstKey() {\n    return this.firstKey;\n  }\n\n  getLastKey() {\n    return this.lastKey;\n  }\n\n  getItem(key: Key) {\n    return this.keyMap.get(key);\n  }\n\n  at(idx: number) {\n    const keys = [...this.getKeys()];\n    return this.getItem(keys[idx]);\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Key} from '@react-types/shared';\n\n/**\n * A Selection is a special Set containing Keys, which also has an anchor\n * and current selected key for use when range selecting.\n */\nexport class Selection extends Set<Key> {\n  anchorKey: Key;\n  currentKey: Key;\n\n  constructor(keys?: Iterable<Key> | Selection, anchorKey?: Key, currentKey?: Key) {\n    super(keys);\n    if (keys instanceof Selection) {\n      this.anchorKey = anchorKey || keys.anchorKey;\n      this.currentKey = currentKey || keys.currentKey;\n    } else {\n      this.anchorKey = anchorKey;\n      this.currentKey = currentKey;\n    }\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {useCallback, useEffect, useRef, useState} from 'react';\n\nexport function useControlledState<T, C = T>(value: Exclude<T, undefined>, defaultValue: Exclude<T, undefined> | undefined, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];\nexport function useControlledState<T, C = T>(value: Exclude<T, undefined> | undefined, defaultValue: Exclude<T, undefined>, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void];\nexport function useControlledState<T, C = T>(value: T, defaultValue: T, onChange?: (v: C, ...args: any[]) => void): [T, (value: T, ...args: any[]) => void] {\n  let [stateValue, setStateValue] = useState(value || defaultValue);\n\n  let isControlledRef = useRef(value !== undefined);\n  let isControlled = value !== undefined;\n  useEffect(() => {\n    let wasControlled = isControlledRef.current;\n    if (wasControlled !== isControlled) {\n      console.warn(`WARN: A component changed from ${wasControlled ? 'controlled' : 'uncontrolled'} to ${isControlled ? 'controlled' : 'uncontrolled'}.`);\n    }\n    isControlledRef.current = isControlled;\n  }, [isControlled]);\n\n  let currentValue = isControlled ? value : stateValue;\n  let setValue = useCallback((value, ...args) => {\n    let onChangeCaller = (value, ...onChangeArgs) => {\n      if (onChange) {\n        if (!Object.is(currentValue, value)) {\n          onChange(value, ...onChangeArgs);\n        }\n      }\n      if (!isControlled) {\n        // If uncontrolled, mutate the currentValue local variable so that\n        // calling setState multiple times with the same value only emits onChange once.\n        // We do not use a ref for this because we specifically _do_ want the value to\n        // reset every render, and assigning to a ref in render breaks aborted suspended renders.\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        currentValue = value;\n      }\n    };\n\n    if (typeof value === 'function') {\n      console.warn('We can not support a function callback. See Github Issues for details https://github.com/adobe/react-spectrum/issues/2320');\n      // this supports functional updates https://reactjs.org/docs/hooks-reference.html#functional-updates\n      // when someone using useControlledState calls setControlledState(myFunc)\n      // this will call our useState setState with a function as well which invokes myFunc and calls onChange with the value from myFunc\n      // if we're in an uncontrolled state, then we also return the value of myFunc which to setState looks as though it was just called with myFunc from the beginning\n      // otherwise we just return the controlled value, which won't cause a rerender because React knows to bail out when the value is the same\n      let updateFunction = (oldValue, ...functionArgs) => {\n        let interceptedValue = value(isControlled ? currentValue : oldValue, ...functionArgs);\n        onChangeCaller(interceptedValue, ...args);\n        if (!isControlled) {\n          return interceptedValue;\n        }\n        return oldValue;\n      };\n      setStateValue(updateFunction);\n    } else {\n      if (!isControlled) {\n        setStateValue(value);\n      }\n      onChangeCaller(value, ...args);\n    }\n  }, [isControlled, currentValue, onChange]);\n\n  return [currentValue, setValue];\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {DisabledBehavior, Key, MultipleSelection, SelectionBehavior, SelectionMode} from '@react-types/shared';\nimport {MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\nimport {useControlledState} from '@react-stately/utils';\nimport {useEffect, useMemo, useRef, useState} from 'react';\n\nfunction equalSets(setA, setB) {\n  if (setA.size !== setB.size) {\n    return false;\n  }\n\n  for (let item of setA) {\n    if (!setB.has(item)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport interface MultipleSelectionStateProps extends MultipleSelection {\n  /** How multiple selection should behave in the collection. */\n  selectionBehavior?: SelectionBehavior,\n  /** Whether onSelectionChange should fire even if the new set of keys is the same as the last. */\n  allowDuplicateSelectionEvents?: boolean,\n  /** Whether `disabledKeys` applies to all interactions, or only selection. */\n  disabledBehavior?: DisabledBehavior\n}\n\n/**\n * Manages state for multiple selection and focus in a collection.\n */\nexport function useMultipleSelectionState(props: MultipleSelectionStateProps): MultipleSelectionState {\n  let {\n    selectionMode = 'none' as SelectionMode,\n    disallowEmptySelection,\n    allowDuplicateSelectionEvents,\n    selectionBehavior: selectionBehaviorProp = 'toggle',\n    disabledBehavior = 'all'\n  } = props;\n\n  // We want synchronous updates to `isFocused` and `focusedKey` after their setters are called.\n  // But we also need to trigger a react re-render. So, we have both a ref (sync) and state (async).\n  let isFocusedRef = useRef(false);\n  let [, setFocused] = useState(false);\n  let focusedKeyRef = useRef(null);\n  let childFocusStrategyRef = useRef(null);\n  let [, setFocusedKey] = useState(null);\n  let selectedKeysProp = useMemo(() => convertSelection(props.selectedKeys), [props.selectedKeys]);\n  let defaultSelectedKeys = useMemo(() => convertSelection(props.defaultSelectedKeys, new Selection()), [props.defaultSelectedKeys]);\n  let [selectedKeys, setSelectedKeys] = useControlledState(\n    selectedKeysProp,\n    defaultSelectedKeys,\n    props.onSelectionChange\n  );\n  let disabledKeysProp = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n  let [selectionBehavior, setSelectionBehavior] = useState(selectionBehaviorProp);\n\n  // If the selectionBehavior prop is set to replace, but the current state is toggle (e.g. due to long press\n  // to enter selection mode on touch), and the selection becomes empty, reset the selection behavior.\n  if (selectionBehaviorProp === 'replace' && selectionBehavior === 'toggle' && typeof selectedKeys === 'object' && selectedKeys.size === 0) {\n    setSelectionBehavior('replace');\n  }\n\n  // If the selectionBehavior prop changes, update the state as well.\n  let lastSelectionBehavior = useRef(selectionBehaviorProp);\n  useEffect(() => {\n    if (selectionBehaviorProp !== lastSelectionBehavior.current) {\n      setSelectionBehavior(selectionBehaviorProp);\n      lastSelectionBehavior.current = selectionBehaviorProp;\n    }\n  }, [selectionBehaviorProp]);\n\n  return {\n    selectionMode,\n    disallowEmptySelection,\n    selectionBehavior,\n    setSelectionBehavior,\n    get isFocused() {\n      return isFocusedRef.current;\n    },\n    setFocused(f) {\n      isFocusedRef.current = f;\n      setFocused(f);\n    },\n    get focusedKey() {\n      return focusedKeyRef.current;\n    },\n    get childFocusStrategy() {\n      return childFocusStrategyRef.current;\n    },\n    setFocusedKey(k, childFocusStrategy = 'first') {\n      focusedKeyRef.current = k;\n      childFocusStrategyRef.current = childFocusStrategy;\n      setFocusedKey(k);\n    },\n    selectedKeys,\n    setSelectedKeys(keys) {\n      if (allowDuplicateSelectionEvents || !equalSets(keys, selectedKeys)) {\n        setSelectedKeys(keys);\n      }\n    },\n    disabledKeys: disabledKeysProp,\n    disabledBehavior\n  };\n}\n\nfunction convertSelection(selection: 'all' | Iterable<Key>, defaultValue?: Selection): 'all' | Set<Key> {\n  if (!selection) {\n    return defaultValue;\n  }\n\n  return selection === 'all'\n    ? 'all'\n    : new Selection(selection);\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {ItemElement, ItemProps} from '@react-types/shared';\nimport {PartialNode} from './types';\nimport React, {JSX, ReactElement} from 'react';\n\nfunction Item<T>(props: ItemProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nItem.getCollectionNode = function* getCollectionNode<T>(props: ItemProps<T>, context: any): Generator<PartialNode<T>> {\n  let {childItems, title, children} = props;\n\n  let rendered = props.title || props.children;\n  let textValue = props.textValue || (typeof rendered === 'string' ? rendered : '') || props['aria-label'] || '';\n\n  // suppressTextValueWarning is used in components like Tabs, which don't have type to select support.\n  if (!textValue && !context?.suppressTextValueWarning) {\n    console.warn('<Item> with non-plain text contents is unsupported by type to select for accessibility. Please add a `textValue` prop.');\n  }\n\n  yield {\n    type: 'item',\n    props: props,\n    rendered,\n    textValue,\n    'aria-label': props['aria-label'],\n    hasChildNodes: hasChildItems(props),\n    *childNodes() {\n      if (childItems) {\n        for (let child of childItems) {\n          yield {\n            type: 'item',\n            value: child\n          };\n        }\n      } else if (title) {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child as ItemElement<T>\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\nfunction hasChildItems<T>(props: ItemProps<T>) {\n  if (props.hasChildItems != null) {\n    return props.hasChildItems;\n  }\n\n  if (props.childItems) {\n    return true;\n  }\n\n  if (props.title && React.Children.count(props.children) > 0) {\n    return true;\n  }\n\n  return false;\n}\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Item = Item as <T>(props: ItemProps<T>) => JSX.Element;\nexport {_Item as Item};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {PartialNode} from './types';\nimport React, {JSX, ReactElement} from 'react';\nimport {SectionProps} from '@react-types/shared';\n\nfunction Section<T>(props: SectionProps<T>): ReactElement { // eslint-disable-line @typescript-eslint/no-unused-vars\n  return null;\n}\n\nSection.getCollectionNode = function* getCollectionNode<T>(props: SectionProps<T>): Generator<PartialNode<T>> {\n  let {children, title, items} = props;\n  yield {\n    type: 'section',\n    props: props,\n    hasChildNodes: true,\n    rendered: title,\n    'aria-label': props['aria-label'],\n    *childNodes() {\n      if (typeof children === 'function') {\n        if (!items) {\n          throw new Error('props.children was a function but props.items is missing');\n        }\n\n        for (let item of items) {\n          yield {\n            type: 'item',\n            value: item,\n            renderer: children\n          };\n        }\n      } else {\n        let items: PartialNode<T>[] = [];\n        React.Children.forEach(children, child => {\n          items.push({\n            type: 'item',\n            element: child\n          });\n        });\n\n        yield* items;\n      }\n    }\n  };\n};\n\n// We don't want getCollectionNode to show up in the type definition\nlet _Section = Section as <T>(props: SectionProps<T>) => JSX.Element;\nexport {_Section as Section};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport type {Collection, Node} from '@react-types/shared';\n\nexport function getChildNodes<T>(node: Node<T>, collection: Collection<Node<T>>): Iterable<Node<T>> {\n  // New API: call collection.getChildren with the node key.\n  if (typeof collection.getChildren === 'function') {\n    return collection.getChildren(node.key);\n  }\n\n  // Old API: access childNodes directly.\n  return node.childNodes;\n}\n\nexport function getFirstItem<T>(iterable: Iterable<T>): T | undefined {\n  return getNthItem(iterable, 0);\n}\n\nexport function getNthItem<T>(iterable: Iterable<T>, index: number): T | undefined {\n  if (index < 0) {\n    return undefined;\n  }\n\n  let i = 0;\n  for (let item of iterable) {\n    if (i === index) {\n      return item;\n    }\n\n    i++;\n  }\n}\n\nexport function getLastItem<T>(iterable: Iterable<T>): T | undefined {\n  let lastItem = undefined;\n  for (let value of iterable) {\n    lastItem = value;\n  }\n\n  return lastItem;\n}\n\nexport function compareNodeOrder<T>(collection: Collection<Node<T>>, a: Node<T>, b: Node<T>) {\n  // If the two nodes have the same parent, compare their indices.\n  if (a.parentKey === b.parentKey) {\n    return a.index - b.index;\n  }\n\n  // Otherwise, collect all of the ancestors from each node, and find the first one that doesn't match starting from the root.\n  // Include the base nodes in case we are comparing nodes of different levels so that we can compare the higher node to the lower level node's\n  // ancestor of the same level\n  let aAncestors = [...getAncestors(collection, a), a];\n  let bAncestors = [...getAncestors(collection, b), b];\n  let firstNonMatchingAncestor = aAncestors.slice(0, bAncestors.length).findIndex((a, i) => a !== bAncestors[i]);\n  if (firstNonMatchingAncestor !== -1) {\n    // Compare the indices of two children within the common ancestor.\n    a = aAncestors[firstNonMatchingAncestor];\n    b = bAncestors[firstNonMatchingAncestor];\n    return a.index - b.index;\n  }\n\n  // If there isn't a non matching ancestor, we might be in a case where one of the nodes is the ancestor of the other.\n  if (aAncestors.findIndex(node => node === b) >= 0) {\n    return 1;\n  } else if (bAncestors.findIndex(node => node === a) >= 0) {\n    return -1;\n  }\n\n  // 🤷\n  return -1;\n}\n\nfunction getAncestors<T>(collection: Collection<Node<T>>, node: Node<T>): Node<T>[] {\n  let parents = [];\n\n  while (node?.parentKey != null) {\n    node = collection.getItem(node.parentKey);\n    parents.unshift(node);\n  }\n\n  return parents;\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {\n  Collection, DisabledBehavior,\n  FocusStrategy,\n  Selection as ISelection,\n  Key,\n  LongPressEvent,\n  Node,\n  PressEvent,\n  SelectionBehavior,\n  SelectionMode\n} from '@react-types/shared';\nimport {compareNodeOrder, getChildNodes, getFirstItem} from '@react-stately/collections';\nimport {MultipleSelectionManager, MultipleSelectionState} from './types';\nimport {Selection} from './Selection';\n\ninterface SelectionManagerOptions {\n  allowsCellSelection?: boolean\n}\n\n/**\n * An interface for reading and updating multiple selection state.\n */\nexport class SelectionManager implements MultipleSelectionManager {\n  private collection: Collection<Node<unknown>>;\n  private state: MultipleSelectionState;\n  private allowsCellSelection: boolean;\n  private _isSelectAll: boolean;\n\n  constructor(collection: Collection<Node<unknown>>, state: MultipleSelectionState, options?: SelectionManagerOptions) {\n    this.collection = collection;\n    this.state = state;\n    this.allowsCellSelection = options?.allowsCellSelection ?? false;\n    this._isSelectAll = null;\n  }\n\n  /**\n   * The type of selection that is allowed in the collection.\n   */\n  get selectionMode(): SelectionMode {\n    return this.state.selectionMode;\n  }\n\n  /**\n   * Whether the collection allows empty selection.\n   */\n  get disallowEmptySelection(): boolean {\n    return this.state.disallowEmptySelection;\n  }\n\n  /**\n   * The selection behavior for the collection.\n   */\n  get selectionBehavior(): SelectionBehavior {\n    return this.state.selectionBehavior;\n  }\n\n  /**\n   * Sets the selection behavior for the collection.\n   */\n  setSelectionBehavior(selectionBehavior: SelectionBehavior) {\n    this.state.setSelectionBehavior(selectionBehavior);\n  }\n\n  /**\n   * Whether the collection is currently focused.\n   */\n  get isFocused(): boolean {\n    return this.state.isFocused;\n  }\n\n  /**\n   * Sets whether the collection is focused.\n   */\n  setFocused(isFocused: boolean) {\n    this.state.setFocused(isFocused);\n  }\n\n  /**\n   * The current focused key in the collection.\n   */\n  get focusedKey(): Key {\n    return this.state.focusedKey;\n  }\n\n  /** Whether the first or last child of the focused key should receive focus. */\n  get childFocusStrategy(): FocusStrategy {\n    return this.state.childFocusStrategy;\n  }\n\n  /**\n   * Sets the focused key.\n   */\n  setFocusedKey(key: Key | null, childFocusStrategy?: FocusStrategy) {\n    if (key == null || this.collection.getItem(key)) {\n      this.state.setFocusedKey(key, childFocusStrategy);\n    }\n  }\n\n  /**\n   * The currently selected keys in the collection.\n   */\n  get selectedKeys(): Set<Key> {\n    return this.state.selectedKeys === 'all'\n      ? new Set(this.getSelectAllKeys())\n      : this.state.selectedKeys;\n  }\n\n  /**\n   * The raw selection value for the collection.\n   * Either 'all' for select all, or a set of keys.\n   */\n  get rawSelection(): ISelection {\n    return this.state.selectedKeys;\n  }\n\n  /**\n   * Returns whether a key is selected.\n   */\n  isSelected(key: Key) {\n    if (this.state.selectionMode === 'none') {\n      return false;\n    }\n\n    key = this.getKey(key);\n    return this.state.selectedKeys === 'all'\n      ? this.canSelectItem(key)\n      : this.state.selectedKeys.has(key);\n  }\n\n  /**\n   * Whether the selection is empty.\n   */\n  get isEmpty(): boolean {\n    return this.state.selectedKeys !== 'all' && this.state.selectedKeys.size === 0;\n  }\n\n  /**\n   * Whether all items in the collection are selected.\n   */\n  get isSelectAll(): boolean {\n    if (this.isEmpty) {\n      return false;\n    }\n\n    if (this.state.selectedKeys === 'all') {\n      return true;\n    }\n\n    if (this._isSelectAll != null) {\n      return this._isSelectAll;\n    }\n\n    let allKeys = this.getSelectAllKeys();\n    let selectedKeys = this.state.selectedKeys;\n    this._isSelectAll = allKeys.every(k => selectedKeys.has(k));\n    return this._isSelectAll;\n  }\n\n  get firstSelectedKey(): Key | null {\n    let first: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!first || (item && compareNodeOrder(this.collection, item, first) < 0)) {\n        first = item;\n      }\n    }\n\n    return first?.key;\n  }\n\n  get lastSelectedKey(): Key | null {\n    let last: Node<unknown> | null = null;\n    for (let key of this.state.selectedKeys) {\n      let item = this.collection.getItem(key);\n      if (!last || (item && compareNodeOrder(this.collection, item, last) > 0)) {\n        last = item;\n      }\n    }\n\n    return last?.key;\n  }\n\n  get disabledKeys(): Set<Key> {\n    return this.state.disabledKeys;\n  }\n\n  get disabledBehavior(): DisabledBehavior {\n    return this.state.disabledBehavior;\n  }\n\n  /**\n   * Extends the selection to the given key.\n   */\n  extendSelection(toKey: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      this.replaceSelection(toKey);\n      return;\n    }\n\n    toKey = this.getKey(toKey);\n\n    let selection: Selection;\n\n    // Only select the one key if coming from a select all.\n    if (this.state.selectedKeys === 'all') {\n      selection = new Selection([toKey], toKey, toKey);\n    } else {\n      let selectedKeys = this.state.selectedKeys as Selection;\n      let anchorKey = selectedKeys.anchorKey || toKey;\n      selection = new Selection(selectedKeys, anchorKey, toKey);\n      for (let key of this.getKeyRange(anchorKey, selectedKeys.currentKey || toKey)) {\n        selection.delete(key);\n      }\n\n      for (let key of this.getKeyRange(toKey, anchorKey)) {\n        if (this.canSelectItem(key)) {\n          selection.add(key);\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getKeyRange(from: Key, to: Key) {\n    let fromItem = this.collection.getItem(from);\n    let toItem = this.collection.getItem(to);\n    if (fromItem && toItem) {\n      if (compareNodeOrder(this.collection, fromItem, toItem) <= 0) {\n        return this.getKeyRangeInternal(from, to);\n      }\n\n      return this.getKeyRangeInternal(to, from);\n    }\n\n    return [];\n  }\n\n  private getKeyRangeInternal(from: Key, to: Key) {\n    let keys: Key[] = [];\n    let key = from;\n    while (key) {\n      let item = this.collection.getItem(key);\n      if (item && item.type === 'item' || (item.type === 'cell' && this.allowsCellSelection)) {\n        keys.push(key);\n      }\n\n      if (key === to) {\n        return keys;\n      }\n\n      key = this.collection.getKeyAfter(key);\n    }\n\n    return [];\n  }\n\n  private getKey(key: Key) {\n    let item = this.collection.getItem(key);\n    if (!item) {\n      // ¯\\_(ツ)_/¯\n      return key;\n    }\n\n    // If cell selection is allowed, just return the key.\n    if (item.type === 'cell' && this.allowsCellSelection) {\n      return key;\n    }\n\n    // Find a parent item to select\n    while (item.type !== 'item' && item.parentKey != null) {\n      item = this.collection.getItem(item.parentKey);\n    }\n\n    if (!item || item.type !== 'item') {\n      return null;\n    }\n\n    return item.key;\n  }\n\n  /**\n   * Toggles whether the given key is selected.\n   */\n  toggleSelection(key: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single' && !this.isSelected(key)) {\n      this.replaceSelection(key);\n      return;\n    }\n\n    key = this.getKey(key);\n    if (key == null) {\n      return;\n    }\n\n    let keys = new Selection(this.state.selectedKeys === 'all' ? this.getSelectAllKeys() : this.state.selectedKeys);\n    if (keys.has(key)) {\n      keys.delete(key);\n      // TODO: move anchor to last selected key...\n      // Does `current` need to move here too?\n    } else if (this.canSelectItem(key)) {\n      keys.add(key);\n      keys.anchorKey = key;\n      keys.currentKey = key;\n    }\n\n    if (this.disallowEmptySelection && keys.size === 0) {\n      return;\n    }\n\n    this.state.setSelectedKeys(keys);\n  }\n\n  /**\n   * Replaces the selection with only the given key.\n   */\n  replaceSelection(key: Key) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    key = this.getKey(key);\n    if (key == null) {\n      return;\n    }\n\n    let selection = this.canSelectItem(key)\n      ? new Selection([key], key, key)\n      : new Selection();\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  /**\n   * Replaces the selection with the given keys.\n   */\n  setSelectedKeys(keys: Iterable<Key>) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    let selection = new Selection();\n    for (let key of keys) {\n      key = this.getKey(key);\n      if (key != null) {\n        selection.add(key);\n        if (this.selectionMode === 'single') {\n          break;\n        }\n      }\n    }\n\n    this.state.setSelectedKeys(selection);\n  }\n\n  private getSelectAllKeys() {\n    let keys: Key[] = [];\n    let addKeys = (key: Key) => {\n      while (key != null) {\n        if (this.canSelectItem(key)) {\n          let item = this.collection.getItem(key);\n          if (item.type === 'item') {\n            keys.push(key);\n          }\n\n          // Add child keys. If cell selection is allowed, then include item children too.\n          if (item.hasChildNodes && (this.allowsCellSelection || item.type !== 'item')) {\n            addKeys(getFirstItem(getChildNodes(item, this.collection)).key);\n          }\n        }\n\n        key = this.collection.getKeyAfter(key);\n      }\n    };\n\n    addKeys(this.collection.getFirstKey());\n    return keys;\n  }\n\n  /**\n   * Selects all items in the collection.\n   */\n  selectAll() {\n    if (!this.isSelectAll && this.selectionMode === 'multiple') {\n      this.state.setSelectedKeys('all');\n    }\n  }\n\n  /**\n   * Removes all keys from the selection.\n   */\n  clearSelection() {\n    if (!this.disallowEmptySelection && (this.state.selectedKeys === 'all' || this.state.selectedKeys.size > 0)) {\n      this.state.setSelectedKeys(new Selection());\n    }\n  }\n\n  /**\n   * Toggles between select all and an empty selection.\n   */\n  toggleSelectAll() {\n    if (this.isSelectAll) {\n      this.clearSelection();\n    } else {\n      this.selectAll();\n    }\n  }\n\n  select(key: Key, e?: PressEvent | LongPressEvent | PointerEvent) {\n    if (this.selectionMode === 'none') {\n      return;\n    }\n\n    if (this.selectionMode === 'single') {\n      if (this.isSelected(key) && !this.disallowEmptySelection) {\n        this.toggleSelection(key);\n      } else {\n        this.replaceSelection(key);\n      }\n    } else if (this.selectionBehavior === 'toggle' || (e && (e.pointerType === 'touch' || e.pointerType === 'virtual'))) {\n      // if touch or virtual (VO) then we just want to toggle, otherwise it's impossible to multi select because they don't have modifier keys\n      this.toggleSelection(key);\n    } else {\n      this.replaceSelection(key);\n    }\n  }\n\n  /**\n   * Returns whether the current selection is equal to the given selection.\n   */\n  isSelectionEqual(selection: Set<Key>) {\n    if (selection === this.state.selectedKeys) {\n      return true;\n    }\n\n    // Check if the set of keys match.\n    let selectedKeys = this.selectedKeys;\n    if (selection.size !== selectedKeys.size) {\n      return false;\n    }\n\n    for (let key of selection) {\n      if (!selectedKeys.has(key)) {\n        return false;\n      }\n    }\n\n    for (let key of selectedKeys) {\n      if (!selection.has(key)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  canSelectItem(key: Key) {\n    if (this.state.selectionMode === 'none' || this.state.disabledKeys.has(key)) {\n      return false;\n    }\n\n    let item = this.collection.getItem(key);\n    if (!item || item?.props?.isDisabled || (item.type === 'cell' && !this.allowsCellSelection)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  isDisabled(key: Key) {\n    return this.state.disabledBehavior === 'all' && (this.state.disabledKeys.has(key) || !!this.collection.getItem(key)?.props?.isDisabled);\n  }\n\n  isLink(key: Key) {\n    return !!this.collection.getItem(key)?.props?.href;\n  }\n\n  getItemProps(key: Key) {\n    return this.collection.getItem(key)?.props;\n  }\n}\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {Collection, CollectionStateBase, DisabledBehavior, Expandable, Key, MultipleSelection, Node} from '@react-types/shared';\nimport {SelectionManager, useMultipleSelectionState} from '@react-stately/selection';\nimport {TreeCollection} from './TreeCollection';\nimport {useCallback, useEffect, useMemo} from 'react';\nimport {useCollection} from '@react-stately/collections';\nimport {useControlledState} from '@react-stately/utils';\n\nexport interface TreeProps<T> extends CollectionStateBase<T>, Expandable, MultipleSelection {\n  /** Whether `disabledKeys` applies to all interactions, or only selection. */\n  disabledBehavior?: DisabledBehavior\n}\nexport interface TreeState<T> {\n  /** A collection of items in the tree. */\n  readonly collection: Collection<Node<T>>,\n\n  /** A set of keys for items that are disabled. */\n  readonly disabledKeys: Set<Key>,\n\n  /** A set of keys for items that are expanded. */\n  readonly expandedKeys: Set<Key>,\n\n  /** Toggles the expanded state for an item by its key. */\n  toggleKey(key: Key): void,\n\n  /** Replaces the set of expanded keys. */\n  setExpandedKeys(keys: Set<Key>): void,\n\n  /** A selection manager to read and update multiple selection state. */\n  readonly selectionManager: SelectionManager\n}\n\n/**\n * Provides state management for tree-like components. Handles building a collection\n * of items from props, item expanded state, and manages multiple selection state.\n */\nexport function useTreeState<T extends object>(props: TreeProps<T>): TreeState<T> {\n  let {\n    onExpandedChange\n  } = props;\n\n  let [expandedKeys, setExpandedKeys] = useControlledState(\n    props.expandedKeys ? new Set(props.expandedKeys) : undefined,\n    props.defaultExpandedKeys ? new Set(props.defaultExpandedKeys) : new Set(),\n    onExpandedChange\n  );\n\n  let selectionState = useMultipleSelectionState(props);\n  let disabledKeys = useMemo(() =>\n    props.disabledKeys ? new Set(props.disabledKeys) : new Set<Key>()\n  , [props.disabledKeys]);\n\n  let tree = useCollection(props, useCallback(nodes => new TreeCollection(nodes, {expandedKeys}), [expandedKeys]), null);\n\n  // Reset focused key if that item is deleted from the collection.\n  useEffect(() => {\n    if (selectionState.focusedKey != null && !tree.getItem(selectionState.focusedKey)) {\n      selectionState.setFocusedKey(null);\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tree, selectionState.focusedKey]);\n\n  let onToggle = (key: Key) => {\n    setExpandedKeys(toggleKey(expandedKeys, key));\n  };\n\n  return {\n    collection: tree,\n    expandedKeys,\n    disabledKeys,\n    toggleKey: onToggle,\n    setExpandedKeys,\n    selectionManager: new SelectionManager(tree, selectionState)\n  };\n}\n\nfunction toggleKey(set: Set<Key>, key: Key): Set<Key> {\n  let res = new Set(set);\n  if (res.has(key)) {\n    res.delete(key);\n  } else {\n    res.add(key);\n  }\n\n  return res;\n}\n", "\"use client\";\n\n// src/use-menu.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { useAriaMenu } from \"@nextui-org/use-aria-menu\";\nimport { menu } from \"@nextui-org/theme\";\nimport { useTreeState } from \"@react-stately/tree\";\nimport { filterDOMProps, useDOMRef } from \"@nextui-org/react-utils\";\nimport { useMemo } from \"react\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nfunction useMenu(props) {\n  var _a;\n  const globalContext = useProviderContext();\n  const {\n    as,\n    ref,\n    variant,\n    color,\n    children,\n    disableAnimation = (_a = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _a : false,\n    onAction,\n    closeOnSelect,\n    itemClasses,\n    className,\n    state: propState,\n    topContent,\n    bottomContent,\n    hideEmptyContent = false,\n    hideSelectedIcon = false,\n    emptyContent = \"No items.\",\n    menuProps: userMenuProps,\n    onClose,\n    classNames,\n    ...otherProps\n  } = props;\n  const Component = as || \"ul\";\n  const domRef = useDOMRef(ref);\n  const shouldFilterDOMProps = typeof Component === \"string\";\n  const innerState = useTreeState({ ...otherProps, ...userMenuProps, children });\n  const state = propState || innerState;\n  const { menuProps } = useAriaMenu({ ...otherProps, ...userMenuProps }, state, domRef);\n  const slots = useMemo(() => menu({ className }), [className]);\n  const baseStyles = clsx(classNames == null ? void 0 : classNames.base, className);\n  const getBaseProps = (props2 = {}) => {\n    return {\n      ref: domRef,\n      \"data-slot\": \"base\",\n      className: slots.base({ class: baseStyles }),\n      ...filterDOMProps(otherProps, {\n        enabled: shouldFilterDOMProps\n      }),\n      ...props2\n    };\n  };\n  const getListProps = (props2 = {}) => {\n    return {\n      \"data-slot\": \"list\",\n      className: slots.list({ class: classNames == null ? void 0 : classNames.list }),\n      ...menuProps,\n      ...props2\n    };\n  };\n  const getEmptyContentProps = (props2 = {}) => {\n    return {\n      children: emptyContent,\n      className: slots.emptyContent({ class: classNames == null ? void 0 : classNames.emptyContent }),\n      ...props2\n    };\n  };\n  return {\n    Component,\n    state,\n    variant,\n    color,\n    disableAnimation,\n    onAction,\n    onClose,\n    topContent,\n    bottomContent,\n    closeOnSelect,\n    className,\n    itemClasses,\n    getBaseProps,\n    getListProps,\n    hideEmptyContent,\n    hideSelectedIcon,\n    getEmptyContentProps\n  };\n}\n\nexport {\n  useMenu\n};\n", "\"use client\";\nimport {\n  menu_section_default\n} from \"./chunk-SMP2PQ35.mjs\";\nimport {\n  menu_item_default\n} from \"./chunk-CQ43W3AP.mjs\";\nimport {\n  useMenu\n} from \"./chunk-BA3PRXRG.mjs\";\n\n// src/menu.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nfunction Menu(props, ref) {\n  const {\n    Component,\n    state,\n    closeOnSelect,\n    color,\n    disableAnimation,\n    hideSelectedIcon,\n    hideEmptyContent,\n    variant,\n    onClose,\n    onAction,\n    topContent,\n    bottomContent,\n    itemClasses,\n    getBaseProps,\n    getListProps,\n    getEmptyContentProps\n  } = useMenu({ ...props, ref });\n  const content = /* @__PURE__ */ jsxs(Component, { ...getListProps(), children: [\n    !state.collection.size && !hideEmptyContent && /* @__PURE__ */ jsx(\"li\", { children: /* @__PURE__ */ jsx(\"div\", { ...getEmptyContentProps() }) }),\n    [...state.collection].map((item) => {\n      const itemProps = {\n        closeOnSelect,\n        color,\n        disableAnimation,\n        item,\n        state,\n        variant,\n        onClose,\n        onAction,\n        hideSelectedIcon,\n        ...item.props\n      };\n      if (item.type === \"section\") {\n        return /* @__PURE__ */ jsx(menu_section_default, { ...itemProps, itemClasses }, item.key);\n      }\n      let menuItem = /* @__PURE__ */ jsx(menu_item_default, { ...itemProps, classNames: itemClasses }, item.key);\n      if (item.wrapper) {\n        menuItem = item.wrapper(menuItem);\n      }\n      return menuItem;\n    })\n  ] });\n  return /* @__PURE__ */ jsxs(\"div\", { ...getBaseProps(), children: [\n    topContent,\n    content,\n    bottomContent\n  ] });\n}\nvar menu_default = forwardRef(Menu);\nMenu.displayName = \"NextUI.Menu\";\n\nexport {\n  menu_default\n};\n", "\"use client\";\n\n// src/base/menu-item-base.tsx\nimport { BaseItem } from \"@nextui-org/aria-utils\";\nvar MenuItemBase = BaseItem;\nvar menu_item_base_default = MenuItemBase;\n\nexport {\n  menu_item_base_default\n};\n", "\"use client\";\nimport {\n  useDropdownContext\n} from \"./chunk-WRRPXIUB.mjs\";\n\n// src/dropdown-menu.tsx\nimport { PopoverContent } from \"@nextui-org/popover\";\nimport { FocusScope } from \"@react-aria/focus\";\nimport { forwardRef } from \"@nextui-org/system\";\nimport { Menu } from \"@nextui-org/menu\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction DropdownMenu(props, ref) {\n  const { getMenuProps } = useDropdownContext();\n  return /* @__PURE__ */ jsx(PopoverContent, { children: /* @__PURE__ */ jsx(FocusScope, { contain: true, restoreFocus: true, children: /* @__PURE__ */ jsx(Menu, { ...getMenuProps(props, ref) }) }) });\n}\nvar dropdown_menu_default = forwardRef(DropdownMenu);\nDropdownMenu.displayName = \"NextUI.DropdownMenu\";\n\nexport {\n  dropdown_menu_default\n};\n", "\"use client\";\nimport {\n  useDropdownContext\n} from \"./chunk-WRRPXIUB.mjs\";\n\n// src/dropdown-trigger.tsx\nimport { forwardRef } from \"@nextui-org/system\";\nimport { PopoverTrigger } from \"@nextui-org/popover\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DropdownTrigger = forwardRef((props, _) => {\n  const { getMenuTriggerProps } = useDropdownContext();\n  const { children, ...otherProps } = props;\n  return /* @__PURE__ */ jsx(PopoverTrigger, { ...getMenuTriggerProps(otherProps), children });\n});\nDropdownTrigger.displayName = \"NextUI.DropdownTrigger\";\nvar dropdown_trigger_default = DropdownTrigger;\n\nexport {\n  dropdown_trigger_default\n};\n", "/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy, Key} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\nexport interface RootMenuTriggerState extends MenuTriggerState {\n  /** Opens a specific submenu tied to a specific menu item at a specific level. */\n  openSubmenu: (triggerKey: Key, level: number) => void,\n\n  /** Closes a specific submenu tied to a specific menu item at a specific level. */\n  closeSubmenu: (triggerKey: Key, level: number) => void,\n\n  /** An array of open submenu trigger keys within the menu tree.\n   * The index of key within array matches the submenu level in the tree.\n   */\n  expandedKeysStack: Key[],\n\n  /** Closes the menu and all submenus in the menu tree. */\n  close: () => void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens. Also tracks the open submenus within\n * the menu tree via their trigger keys.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): RootMenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n  let [expandedKeysStack, setExpandedKeysStack] = useState<Key[]>([]);\n\n  let closeAll = () => {\n    setExpandedKeysStack([]);\n    overlayTriggerState.close();\n  };\n\n  let openSubmenu = (triggerKey: Key, level: number) => {\n    setExpandedKeysStack(oldStack => {\n      if (level > oldStack.length) {\n        return oldStack;\n      }\n\n      return [...oldStack.slice(0, level), triggerKey];\n    });\n  };\n\n  let closeSubmenu = (triggerKey: Key, level: number) => {\n    setExpandedKeysStack(oldStack => {\n      let key = oldStack[level];\n      if (key === triggerKey) {\n        return oldStack.slice(0, level);\n      } else {\n        return oldStack;\n      }\n    });\n  };\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    },\n    close() {\n      closeAll();\n    },\n    expandedKeysStack,\n    openSubmenu,\n    closeSubmenu\n  };\n}\n", "\"use client\";\n\n// src/use-dropdown.ts\nimport { useProviderContext } from \"@nextui-org/system\";\nimport { useMenuTriggerState } from \"@react-stately/menu\";\nimport { useMenuTrigger } from \"@react-aria/menu\";\nimport { dropdown } from \"@nextui-org/theme\";\nimport { clsx } from \"@nextui-org/shared-utils\";\nimport { mergeRefs } from \"@nextui-org/react-utils\";\nimport { useMemo, useRef } from \"react\";\nimport { mergeProps } from \"@react-aria/utils\";\nfunction useDropdown(props) {\n  var _a;\n  const globalContext = useProviderContext();\n  const {\n    as,\n    triggerRef: triggerRefProp,\n    isOpen,\n    defaultOpen,\n    onOpenChange,\n    isDisabled,\n    type = \"menu\",\n    trigger = \"press\",\n    placement = \"bottom\",\n    closeOnSelect = true,\n    shouldBlockScroll = true,\n    classNames: classNamesProp,\n    disableAnimation = (_a = globalContext == null ? void 0 : globalContext.disableAnimation) != null ? _a : false,\n    onClose,\n    className,\n    ...otherProps\n  } = props;\n  const Component = as || \"div\";\n  const triggerRef = useRef(null);\n  const menuTriggerRef = triggerRefProp || triggerRef;\n  const menuRef = useRef(null);\n  const popoverRef = useRef(null);\n  const state = useMenuTriggerState({\n    trigger,\n    isOpen,\n    defaultOpen,\n    onOpenChange: (isOpen2) => {\n      onOpenChange == null ? void 0 : onOpenChange(isOpen2);\n      if (!isOpen2) {\n        onClose == null ? void 0 : onClose();\n      }\n    }\n  });\n  const { menuTriggerProps, menuProps } = useMenuTrigger(\n    { type, trigger, isDisabled },\n    state,\n    menuTriggerRef\n  );\n  const classNames = useMemo(\n    () => dropdown({\n      className\n    }),\n    [className]\n  );\n  const onMenuAction = (menuCloseOnSelect) => {\n    if (menuCloseOnSelect !== void 0 && !menuCloseOnSelect) {\n      return;\n    }\n    if (closeOnSelect) {\n      state.close();\n    }\n  };\n  const getPopoverProps = (props2 = {}) => {\n    const popoverProps = mergeProps(otherProps, props2);\n    return {\n      state,\n      placement,\n      ref: popoverRef,\n      disableAnimation,\n      shouldBlockScroll,\n      scrollRef: menuRef,\n      triggerRef: menuTriggerRef,\n      ...popoverProps,\n      classNames: {\n        ...classNamesProp,\n        ...props2.classNames,\n        content: clsx(classNames, classNamesProp == null ? void 0 : classNamesProp.content, props2.className)\n      }\n    };\n  };\n  const getMenuTriggerProps = (originalProps = {}, _ref = null) => {\n    const { onPress, onPressStart, ...otherMenuTriggerProps } = menuTriggerProps;\n    return {\n      ...mergeProps(otherMenuTriggerProps, { isDisabled }, originalProps),\n      ref: mergeRefs(_ref, triggerRef)\n    };\n  };\n  const getMenuProps = (props2, _ref = null) => {\n    return {\n      ref: mergeRefs(_ref, menuRef),\n      menuProps,\n      closeOnSelect,\n      ...mergeProps(props2, {\n        onAction: (key) => {\n          var _a2, _b;\n          const item = (_a2 = props2 == null ? void 0 : props2.children) == null ? void 0 : _a2.find((item2) => item2.key === key);\n          if (((_b = item == null ? void 0 : item.props) == null ? void 0 : _b.closeOnSelect) === false) {\n            onMenuAction(false);\n            return;\n          }\n          onMenuAction(props2 == null ? void 0 : props2.closeOnSelect);\n        },\n        onClose: state.close\n      })\n    };\n  };\n  return {\n    Component,\n    menuRef,\n    menuProps,\n    classNames,\n    closeOnSelect,\n    onClose: state.close,\n    autoFocus: state.focusStrategy || true,\n    disableAnimation,\n    getPopoverProps,\n    getMenuProps,\n    getMenuTriggerProps\n  };\n}\n\nexport {\n  useDropdown\n};\n", "\"use client\";\nimport {\n  DropdownProvider\n} from \"./chunk-WRRPXIUB.mjs\";\nimport {\n  useDropdown\n} from \"./chunk-IBACTBRQ.mjs\";\n\n// src/dropdown.tsx\nimport React from \"react\";\nimport { Popover } from \"@nextui-org/popover\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Dropdown = (props) => {\n  const { children, ...otherProps } = props;\n  const context = useDropdown(otherProps);\n  const [menuTrigger, menu] = React.Children.toArray(children);\n  return /* @__PURE__ */ jsx(DropdownProvider, { value: context, children: /* @__PURE__ */ jsxs(Popover, { ...context.getPopoverProps(), children: [\n    menuTrigger,\n    menu\n  ] }) });\n};\nDropdown.displayName = \"NextUI.Dropdown\";\nvar dropdown_default = Dropdown;\n\nexport {\n  dropdown_default\n};\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "$i6df2$useRef", "$i6df2$useEffect", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_react", "$dAE4Y$useRef", "$3H3GQ$flushSync", "$3H3GQ$useRef", "$3H3GQ$useEffect", "itemProps", "$581M0$useEffect", "$581M0$useRef", "key", "menu", "$1aJk5$useMemo", "$670gB$react", "$670gB$useContext", "$670gB$useRef", "$670gB$react", "$670gB$useState", "useMenuItem", "import_react", "import_jsx_runtime", "useMenuItem", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "menuItem", "$458b0a5536c1a7cf$export$40bfa8c7b0832715", "$3whtM$useState", "$3whtM$useRef", "$3whtM$useEffect", "$3whtM$useCallback", "value", "$6tM1y$useRef", "$6tM1y$useState", "$6tM1y$useMemo", "$458b0a5536c1a7cf$export$40bfa8c7b0832715", "$6tM1y$useEffect", "$6Fm0V$react", "getCollectionNode", "items", "$gtysd$react", "a", "$75HV2$useMemo", "$75HV2$useCallback", "$75HV2$useEffect", "import_react", "useMenu", "import_jsx_runtime", "useMenu", "menuItem", "import_jsx_runtime", "import_jsx_runtime", "$8bn9m$useState", "focusStrategy", "import_react", "import_react", "import_jsx_runtime", "menu", "React"]
}
